# Blueprint конфігурація для розгортання сервісу на Render.com
# Цей файл ("render.yaml") дозволяє Render автоматично налаштовувати
# та розгортати ваш додаток при кожному оновленні коду в репозиторії.
services:
  # Визначаємо список сервісів, які будуть розгорнуті.
  # У нашому випадку це один веб-сервіс для бота.
  - type: web
    # 'web' означає, що це буде сервіс, доступний з Інтернету через HTTP/HTTPS.
    # Render автоматично відкриє для нього порти 80 та 443.
    name: ferrik-bot
    # Унікальне ім'я для вашого сервісу. Воно буде частиною URL: ferrik-bot.onrender.com

    # Вказуємо середовище виконання. Render підготує оточення для Python.
    env: python

    # Використовуємо безкоштовний тарифний план.
    # Має певні обмеження (сервер "засинає" після 15 хв неактивності),
    # але ідеально підходить для розробки та MVP.
    plan: free

    # Команда, яка виконується один раз під час створення або оновлення сервісу.
    # Встановлює всі бібліотеки, перелічені у файлі requirements.txt.
    buildCommand: "pip install -r requirements.txt"

    # Основна команда, яка запускає ваш додаток після успішної збірки.
    # 'gunicorn' - це надійний WSGI сервер для продакшену.
    # 'main:app' - вказує gunicorn знайти об'єкт 'app' у файлі 'main.py'.
    # '--worker-class uvicorn.workers.UvicornWorker' - вказує використовувати асинхронний
    # воркер, що є критично важливим для роботи бібліотеки python-telegram-bot v20+.
    startCommand: "gunicorn main:app --worker-class uvicorn.workers.UvicornWorker"

    # Секція для визначення змінних оточення, доступних у вашому додатку.
    envVars:
      - key: PYTHON_VERSION
        # Явно вказуємо версію Python для уникнення проблем із сумісністю.
        value: 3.11

      - key: TELEGRAM_TOKEN
        # 'sync: false' - це ключовий параметр безпеки. Він гарантує,
        # що значення цього секретного токена НЕ буде зберігатись у цьому файлі
        # чи в історії Git. Його потрібно встановити один раз вручну
        # в панелі керування Render -> Environment.
        sync: false

# Можна додати інші налаштування, наприклад:
# region: frankfurt # Вибір регіону для розміщення сервера
# healthCheckPath: /health # Шлях для перевірки стану сервісу
```
