import os
import logging
import google.generativeai as genai

logger = logging.getLogger("ferrik")
GEMINI_API_KEY = os.environ.get("GEMINI_API_KEY", "").strip()

def get_gemini_recommendation(query):
    if not GEMINI_API_KEY:
        logger.warning("GEMINI_API_KEY not set, cannot provide AI recommendation.")
        return "–í–∏–±–∞—á—Ç–µ, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó AI —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ. üòî"

    try:
        genai.configure(api_key=GEMINI_API_KEY)
        model = genai.GenerativeModel("gemini-1.5-flash")
        response = model.generate_content(f"–î–∞–π –∫–æ—Ä–æ—Ç–∫—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—é —Å—Ç—Ä–∞–≤–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∑–∞–ø–∏—Ç—É: {query}")
        return response.text.strip()
    except Exception as e:
        logger.error(f"Gemini API error: {e}")
        return "–í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó. üòî"
