import logging
from flask import Flask, request, abort
from services import telegram, sheets, database
import bot_config as config
from utils.field_mapping import get_field_value, MenuField

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(config.LOGGER_NAME)

app = Flask(__name__)
db = database.Database()

@app.route('/')
def index():
    """–°—Ç–∞—Ä—Ç–æ–≤–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–±–æ—Ç–∏ —Å–µ—Ä–≤—ñ—Å—É."""
    return "Ferrik Bot is running!", 200

@app.route('/webhook', methods=['POST'])
def webhook():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–µ–±—Ö—É–∫—ñ–≤ –≤—ñ–¥ Telegram."""
    # 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –±–µ–∑–ø–µ–∫–∏
    secret_token = request.headers.get('X-Telegram-Bot-Api-Secret-Token')
    if secret_token != config.WEBHOOK_SECRET:
        logger.warning("Invalid webhook secret token received.")
        abort(403)  # Forbidden

    # 2. –û–±—Ä–æ–±–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    try:
        update = request.get_json()
        if not update or 'message' not in update:
            logger.warning("Received an empty or invalid update.")
            return 'ok', 200

        message = update['message']
        chat_id = message['chat']['id']
        text = message.get('text', '').strip()
        user_id = message['from']['id']

        logger.info(f"Received update: {update.get('update_id')}")
        logger.info(f"Message from {user_id}: {text}")

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        db.add_user(user_id, message['from'].get('username'), message['from'].get('first_name'))

        # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥
        if text == '/start':
            handle_start(chat_id, message)
        elif text == 'üçï –ú–µ–Ω—é':
            handle_menu(chat_id)
        elif text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏':
            handle_contacts(chat_id)
        elif text == 'üí° –î–æ–ø–æ–º–æ–≥–∞':
            handle_help(chat_id)
        else:
            handle_unknown(chat_id)

    except Exception as e:
        logger.error(f"Error processing update: {e}", exc_info=True)
        if config.OPERATOR_CHAT_ID:
            telegram.send_message(config.OPERATOR_CHAT_ID, f"üî¥ **Bot Error**\n\n```{e}```", parse_mode='Markdown')

    return 'ok', 200

def handle_start(chat_id, message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start."""
    user_id = message['from']['id']
    user_name = message['from'].get('first_name', '')
    logger.info(f"User {user_name} ({user_id}) started the bot.")

    # –í–ò–ü–†–ê–í–õ–ï–ù–û: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–æ—Ä–µ–∫—Ç–Ω–∏–π HTML
    welcome_message = (
        f"üëã <b>–ü—Ä–∏–≤—ñ—Ç, {user_name}!</b>\n\n"
        "–Ø ‚Äî –±–æ—Ç –¥–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É <b>Ferrik</b>.\n\n"
        "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ, —â–æ–±:\n"
        "üçï –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–µ–Ω—é\n"
        "üìû –î—ñ–∑–Ω–∞—Ç–∏—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–∏\n"
        "üí° –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–ø–æ–º–æ–≥—É\n\n"
        f"–í–∞—à ID –¥–ª—è –∑–≤–µ—Ä–Ω–µ–Ω—å: <code>{user_id}</code>"
    )

    telegram.send_message(
        chat_id,
        welcome_message,
        reply_markup=telegram.create_main_keyboard(),
        parse_mode='HTML'
    )
    if config.OPERATOR_CHAT_ID:
        notification = f"‚úÖ –ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ—á–∞–≤ –¥—ñ–∞–ª–æ–≥:\n–Ü–º'—è: {user_name}\nID: {user_id}"
        telegram.send_message(config.OPERATOR_CHAT_ID, notification)

def handle_menu(chat_id):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ '–ú–µ–Ω—é'."""
    try:
        menu_items = sheets.get_menu()
        if not menu_items:
            telegram.send_message(chat_id, "–ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –º–µ–Ω—é. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
            return

        logger.info(f"Loaded {len(menu_items)} menu items from Google Sheets")

        # –ì—Ä—É–ø—É—î–º–æ —Å—Ç—Ä–∞–≤–∏ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏
        menu_by_category = {}
        for item in menu_items:
            category = get_field_value(item, MenuField.CATEGORY, default="–Ü–Ω—à–µ")
            if category not in menu_by_category:
                menu_by_category[category] = []
            menu_by_category[category].append(item)

        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        full_menu_message = "<b>üçï –ù–ê–®–ï –ú–ï–ù–Æ üçï</b>\n\n"
        for category, items in menu_by_category.items():
            full_menu_message += f"<b>--- {category.upper()} ---</b>\n"
            for item in items:
                name = get_field_value(item, MenuField.NAME, "–ù–∞–∑–≤–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞")
                price = get_field_value(item, MenuField.PRICE, "–¶—ñ–Ω–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞")
                description = get_field_value(item, MenuField.DESCRIPTION)
                
                full_menu_message += f"<b>{name}</b> - {price} –≥—Ä–Ω\n"
                if description:
                    full_menu_message += f"<i>{description}</i>\n"
            full_menu_message += "\n"

        telegram.send_message(chat_id, full_menu_message, parse_mode='HTML')

    except Exception as e:
        logger.error(f"Failed to get or format menu: {e}", exc_info=True)
        telegram.send_message(chat_id, "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –º–µ–Ω—é. –ú–∏ –≤–∂–µ –ø—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ —Ü–∏–º.")
        if config.OPERATOR_CHAT_ID:
            telegram.send_message(config.OPERATOR_CHAT_ID, f"üî¥ **Menu Error**\n\n–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –º–µ–Ω—é.\n–ü—Ä–∏—á–∏–Ω–∞: ```{e}```", parse_mode='Markdown')

def handle_contacts(chat_id):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ '–ö–æ–Ω—Ç–∞–∫—Ç–∏'."""
    contacts_message = (
        "üìû <b>–ù–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏</b> üìû\n\n"
        "<b>–ê–¥—Ä–µ—Å–∞:</b> –º. –¢–µ—Ä–Ω–æ–ø—ñ–ª—å, –≤—É–ª. –ó–∞–º–∫–æ–≤–∞, 5\n"
        "<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> <a href=\"tel:+380991234567\">+38 (099) 123-45-67</a>\n"
        "<b>–ì–æ–¥–∏–Ω–∏ —Ä–æ–±–æ—Ç–∏:</b> 10:00 - 22:00 (–©–æ–¥–Ω—è)"
    )
    telegram.send_message(chat_id, contacts_message, parse_mode='HTML')

def handle_help(chat_id):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ '–î–æ–ø–æ–º–æ–≥–∞'."""
    help_message = (
        "üí° <b>–î–æ–ø–æ–º–æ–≥–∞</b> üí°\n\n"
        "–Ø –º–æ–∂—É –ø–æ–∫–∞–∑–∞—Ç–∏ –≤–∞–º –º–µ–Ω—é —Ç–∞ –Ω–∞–¥–∞—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.\n"
        "–ü—Ä–æ—Å—Ç–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É –µ–∫—Ä–∞–Ω—É.\n\n"
        "–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º, –≤–∫–∞–∑–∞–Ω–∏–º —É –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö."
    )
    telegram.send_message(chat_id, help_message, parse_mode='HTML')

def handle_unknown(chat_id):
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –Ω–µ–≤—ñ–¥–æ–º–∏—Ö –∫–æ–º–∞–Ω–¥."""
    unknown_message = "–ù–µ —Ä–æ–∑—É–º—ñ—é –≤–∞—Å. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é."
    telegram.send_message(chat_id, unknown_message)

if __name__ == '__main__':
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≤–µ–±—Ö—É–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
    # –ó–∞–∑–≤–∏—á–∞–π —Ü–µ —Ä–æ–±–∏—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –æ–∫—Ä–µ–º–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º –∞–±–æ —á–µ—Ä–µ–∑ API
    # telegram.set_webhook()
    app.run(host='0.0.0.0', port=config.PORT)

