"""
üõí CART MANAGER - –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ—à–∏–∫–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
–û–∫—Ä–µ–º–∏–π –º–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ—à–∏–∫–æ–º
"""

import logging
from typing import List, Dict, Any, Optional

logger = logging.getLogger(__name__)

# ============================================================================
# CART STORAGE
# ============================================================================

_carts: Dict[int, List[Dict[str, Any]]] = {}


def get_user_cart(user_id: int) -> List[Dict[str, Any]]:
    """
    –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—à–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    
    Args:
        user_id: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    
    Returns:
        –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É
    """
    if user_id not in _carts:
        _carts[user_id] = []
    
    return _carts[user_id]


def add_to_cart(user_id: int, item: Dict[str, Any]) -> bool:
    """
    –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä –¥–æ –∫–æ—à–∏–∫–∞
    
    Args:
        user_id: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        item: –¢–æ–≤–∞—Ä {'id', 'name', 'price', 'quantity'}
    
    Returns:
        True —è–∫—â–æ —É—Å–ø—ñ—à–Ω–æ
    """
    try:
        cart = get_user_cart(user_id)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—à–∏–∫—É
        for cart_item in cart:
            if cart_item.get('id') == item.get('id'):
                # –ó–±—ñ–ª—å—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å
                cart_item['quantity'] = cart_item.get('quantity', 1) + item.get('quantity', 1)
                logger.info(f"‚úèÔ∏è Updated {item.get('name')} qty in cart")
                return True
        
        # –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä
        cart.append(item)
        logger.info(f"‚ûï Added {item.get('name')} to cart")
        return True
    
    except Exception as e:
        logger.error(f"‚ùå Error adding to cart: {e}")
        return False


def remove_from_cart(user_id: int, item_id: str) -> bool:
    """
    –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä –∑ –∫–æ—à–∏–∫–∞
    
    Args:
        user_id: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        item_id: ID —Ç–æ–≤–∞—Ä–∞
    
    Returns:
        True —è–∫—â–æ —É—Å–ø—ñ—à–Ω–æ
    """
    try:
        cart = get_user_cart(user_id)
        _carts[user_id] = [item for item in cart if item.get('id') != item_id]
        logger.info(f"üóëÔ∏è Removed item {item_id} from cart")
        return True
    except Exception as e:
        logger.error(f"‚ùå Error removing from cart: {e}")
        return False


def update_cart_item(user_id: int, item_id: str, quantity: int) -> bool:
    """
    –û–Ω–æ–≤–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—à–∏–∫—É
    
    Args:
        user_id: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        item_id: ID —Ç–æ–≤–∞—Ä–∞
        quantity: –ù–æ–≤–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å
    
    Returns:
        True —è–∫—â–æ —É—Å–ø—ñ—à–Ω–æ
    """
    try:
        cart = get_user_cart(user_id)
        
        for item in cart:
            if item.get('id') == item_id:
                if quantity <= 0:
                    return remove_from_cart(user_id, item_id)
                
                item['quantity'] = quantity
                logger.info(f"üìù Updated item {item_id} quantity to {quantity}")
                return True
        
        return False
    except Exception as e:
        logger.error(f"‚ùå Error updating cart: {e}")
        return False


def clear_user_cart(user_id: int) -> bool:
    """–û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    try:
        _carts[user_id] = []
        logger.info(f"üßπ Cleared cart for user {user_id}")
        return True
    except Exception as e:
        logger.error(f"‚ùå Error clearing cart: {e}")
        return False


def get_cart_total(user_id: int) -> float:
    """
    –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –∫–æ—à–∏–∫–∞
    
    Args:
        user_id: ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    
    Returns:
        –ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å
    """
    cart = get_user_cart(user_id)
    total = sum(
        item.get('price', 0) * item.get('quantity', 1)
        for item in cart
    )
    return round(total, 2)


def get_cart_item_count(user_id: int) -> int:
    """–û—Ç—Ä–∏–º–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É"""
    cart = get_user_cart(user_id)
    return sum(item.get('quantity', 1) for item in cart)


def is_cart_empty(user_id: int) -> bool:
    """–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π"""
    return len(get_user_cart(user_id)) == 0
