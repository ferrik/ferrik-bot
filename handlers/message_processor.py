"""
Message processor –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
"""

import logging
import json
from services.gemini import get_gemini_recommendation
from models.user import update_user_activity

logger = logging.getLogger(__name__)

def process_text_message(text, user_id, chat_id):
    """
    –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    
    Args:
        text (str): –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        user_id (int): ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        chat_id (int): ID —á–∞—Ç—É
        
    Returns:
        str: –í—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ None
    """
    try:
        # –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        update_user_activity(user_id)
        
        # –õ–æ–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        logger.info(f"Processing text from user {user_id}: {text}")
        
        # –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥
        if text.startswith('/'):
            return process_command(text, user_id, chat_id)
        
        # –û–±—Ä–æ–±–∫–∞ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤
        text_lower = text.lower()
        
        if any(word in text_lower for word in ['–º–µ–Ω—é', 'menu', '—ó–∂–∞', 'food']):
            return "–î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –º–µ–Ω—é –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É 'üçî –ó–∞–º–æ–≤–∏—Ç–∏ —ó–∂—É'"
        
        if any(word in text_lower for word in ['—Ü—ñ–Ω–∞', 'price', '—Å–∫—ñ–ª—å–∫–∏', '–≤–∞—Ä—Ç—ñ—Å—Ç—å']):
            return "–¶—ñ–Ω–∏ –Ω–∞ –≤—Å—ñ —Å—Ç—Ä–∞–≤–∏ –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤ –Ω–∞—à–æ–º—É –º–µ–Ω—é. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üçî –ó–∞–º–æ–≤–∏—Ç–∏ —ó–∂—É'"
        
        if any(word in text_lower for word in ['–¥–æ—Å—Ç–∞–≤–∫–∞', 'delivery', '–ø—Ä–∏–≤–µ–∑—Ç–∏']):
            return "üöö –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –≤—ñ–¥ 300 –≥—Ä–Ω. –ß–∞—Å –¥–æ—Å—Ç–∞–≤–∫–∏: 30-45 —Ö–≤"
        
        if any(word in text_lower for word in ['–∫–æ–Ω—Ç–∞–∫—Ç', '—Ç–µ–ª–µ—Ñ–æ–Ω', '–∑–≤\'—è–∑–æ–∫']):
            return "üìû –ù–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –≤ —Ä–æ–∑–¥—ñ–ª—ñ '–ö–æ–Ω—Ç–∞–∫—Ç–∏'"
        
        if any(word in text_lower for word in ['—Ä–æ–±–æ—Ç–∞', '—á–∞—Å', '–≤—ñ–¥–∫—Ä–∏—Ç–æ']):
            return "üïí –ú–∏ –ø—Ä–∞—Ü—é—î–º–æ —â–æ–¥–Ω—è –∑ 10:00 –¥–æ 22:00"
        
        # –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –ø—ñ–¥—ñ–π—à–ª–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ AI
        return process_with_ai(text, user_id)
        
    except Exception as e:
        logger.error(f"Error processing text message: {e}")
        return "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"

def process_command(command, user_id, chat_id):
    """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
    try:
        command_lower = command.lower().strip()
        
        if command_lower == '/start':
            return None  # –û–±—Ä–æ–±–ª—è—î—Ç—å—Å—è –≤ main.py
        
        elif command_lower == '/help':
            return """
ü§ñ **–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:**

/start - –ü–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –º–µ–Ω—é
/menu - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–µ–Ω—é
/contact - –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
/info - –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω

–ê–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó!
"""
        
        elif command_lower == '/menu':
            return "–î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –º–µ–Ω—é –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É 'üçî –ó–∞–º–æ–≤–∏—Ç–∏ —ó–∂—É'"
        
        elif command_lower == '/contact':
            return """
üìû **–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è**

üì± –¢–µ–ª–µ—Ñ–æ–Ω: +380XX XXX XX XX
üìß Email: info@ferrikfoot.com
üåê –°–∞–π—Ç: www.ferrikfoot.com

üìç –ê–¥—Ä–µ—Å–∞: –º. –ö–∏—ó–≤, –≤—É–ª. –ü—Ä–∏–∫–ª–∞–¥–Ω–∞, 1
"""
        
        elif command_lower == '/info':
            return """
‚ÑπÔ∏è **–ü—Ä–æ FerrikFoot**

üçî –ú–∏ - –∫–æ–º–∞–Ω–¥–∞ –µ–Ω—Ç—É–∑—ñ–∞—Å—Ç—ñ–≤, —è–∫—ñ —Å—Ç–≤–æ—Ä—é—é—Ç—å —Å–º–∞—á–Ω—É —ó–∂—É –¥–ª—è –≤–∞—Å!

üéØ –ù–∞—à–∞ –º–µ—Ç–∞ - —à–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ —è–∫—ñ—Å–Ω–æ—ó —ó–∂—ñ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω–∏–º–∏ —Ü—ñ–Ω–∞–º–∏.

‚≠ê –©–æ –Ω–∞—Å –≤—ñ–¥—Ä—ñ–∑–Ω—è—î:
‚Ä¢ –°–≤—ñ–∂—ñ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏
‚Ä¢ –®–≤–∏–¥–∫–µ –ø—Ä–∏–≥–æ—Ç—É–≤–∞–Ω–Ω—è
‚Ä¢ –î—Ä—É–∂–Ω—ñ–π —Å–µ—Ä–≤—ñ—Å
"""
        
        else:
            return f"–ö–æ–º–∞–Ω–¥–∞ {command} –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–∞. –í–≤–µ–¥—ñ—Ç—å /help –¥–ª—è —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥."
            
    except Exception as e:
        logger.error(f"Error processing command: {e}")
        return "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∫–æ–º–∞–Ω–¥–∏"

def process_with_ai(text, user_id):
    """–û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ AI"""
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∏–π –ø—Ä–æ–º—Ç
        prompt = f"""
–¢–∏ - –ø–æ–º—ñ—á–Ω–∏–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É FerrikFoot. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–ø–∏—Å–∞–≤: "{text}"

–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω:
- –ù–∞–∑–≤–∞: FerrikFoot
- –°–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è: —à–≤–∏–¥–∫–µ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è, –ø—ñ—Ü–∞, –±—É—Ä–≥–µ—Ä–∏
- –ß–∞—Å —Ä–æ–±–æ—Ç–∏: 10:00-22:00 —â–æ–¥–Ω—è
- –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –≤—ñ–¥ 300 –≥—Ä–Ω
- –ß–∞—Å –¥–æ—Å—Ç–∞–≤–∫–∏: 30-45 —Ö–≤
- –ú—ñ—Å—Ç–æ: –ö–∏—ó–≤

–î–∞–π –∫–æ—Ä–∏—Å–Ω—É —Ç–∞ –¥—Ä—É–∂–Ω—é –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é. –ë—É–¥—å —Å—Ç–∏—Å–ª–∏–º (–¥–æ 200 —Å–∏–º–≤–æ–ª—ñ–≤).
–Ø–∫—â–æ –ø–∏—Ç–∞–Ω–Ω—è –Ω–µ —Å—Ç–æ—Å—É—î—Ç—å—Å—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É, –≤–≤—ñ—á–ª–∏–≤–æ –ø–µ—Ä–µ—Å–ø—Ä—è–º—É–π –Ω–∞ –Ω–∞—à—ñ –ø–æ—Å–ª—É–≥–∏.
"""
        
        response = get_gemini_recommendation(prompt)
        
        if response and "–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π" not in response.lower():
            return response
        else:
            return generate_fallback_response(text)
            
    except Exception as e:
        logger.error(f"Error processing with AI: {e}")
        return generate_fallback_response(text)

def generate_fallback_response(text):
    """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–∞–ø–∞—Å–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±–µ–∑ AI"""
    text_lower = text.lower()
    
    # –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
    if any(word in text_lower for word in ['–ø—Ä–∏–≤—ñ—Ç', 'hello', '–≤—ñ—Ç–∞—é', '–¥–æ–±—Ä–∏–π']):
        return "–ü—Ä–∏–≤—ñ—Ç! –Ø –ø–æ–º—ñ—á–Ω–∏–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É FerrikFoot. –ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏? üòä"
    
    # –ü–æ–¥—è–∫–∞
    if any(word in text_lower for word in ['–¥—è–∫—É—é', '—Å–ø–∞—Å–∏–±—ñ', 'thanks']):
        return "–ë—É–¥—å –ª–∞—Å–∫–∞! –ó–∞–≤–∂–¥–∏ —Ä–∞–¥–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏! üôÇ"
    
    # –ü–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ —ó–∂—É
    if any(word in text_lower for word in ['—Å–º–∞—á–Ω–æ', '–≥–æ–ª–æ–¥–Ω–∏–π', '–ø–æ—ó—Å—Ç–∏', '—ó—Å—Ç–∏']):
        return "–£ –Ω–∞—Å –¥—É–∂–µ —Å–º–∞—á–Ω–∞ —ó–∂–∞! –ü–æ–¥–∏–≤—ñ—Ç—å—Å—è –Ω–∞—à–µ –º–µ–Ω—é üçî"
    
    # –ó–∞–≥–∞–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    return """
–ù–µ –∑–æ–≤—Å—ñ–º —Ä–æ–∑—É–º—ñ—é –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è. 

–Ø –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑:
üçî –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è–º —ó–∂—ñ
üìã –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω
üìû –ö–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
üöö –î–æ—Å—Ç–∞–≤–∫–æ—é

–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é!
"""

def is_spam_message(text, user_id):
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º"""
    try:
        # –ë–∞–∑–æ–≤—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞ —Å–ø–∞–º
        if len(text) > 1000:  # –ó–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            return True
            
        # –ó–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω—å —Å–∏–º–≤–æ–ª—ñ–≤
        if any(char * 5 in text for char in text):
            return True
            
        # –ü—ñ–¥–æ–∑—Ä—ñ–ª—ñ —Å–ª–æ–≤–∞
        spam_words = ['—Ä–µ–∫–ª–∞–º–∞', '–∑–Ω–∏–∂–∫–∞', '–∞–∫—Ü—ñ—è', '–∫—É–ø–∏', '–ø—Ä–æ–¥–∞–º']
        if sum(word in text.lower() for word in spam_words) >= 2:
            return True
            
        return False
        
    except Exception as e:
        logger.error(f"Error checking spam: {e}")
        return False

def log_user_interaction(user_id, text, response_type="text"):
    """–õ–æ–≥—É–≤–∞–Ω–Ω—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"""
    try:
        interaction_data = {
            'user_id': user_id,
            'message': text[:100],  # –ü–µ—Ä—à—ñ 100 —Å–∏–º–≤–æ–ª—ñ–≤
            'response_type': response_type,
            'timestamp': logging.Formatter().formatTime(logging.LogRecord(
                'interaction', logging.INFO, '', 0, '', (), None
            ))
        }
        
        logger.info(f"User interaction: {json.dumps(interaction_data, ensure_ascii=False)}")
        
    except Exception as e:
        logger.error(f"Error logging interaction: {e}")
