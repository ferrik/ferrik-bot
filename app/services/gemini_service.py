"""
ü§ñ GEMINI SERVICE - –∑ Rate Limiting
"""
import logging
from app.utils.rate_limiter import ai_rate_limiter

logger = logging.getLogger(__name__)

class GeminiService:
    def process_order_request(self, user_id: int, text: str, menu_items):
        """
        –û–ù–û–í–õ–ï–ù–û: –∑ Rate Limiting
        """
        # –ü–ï–†–ï–í–Ü–†–ö–ê RATE LIMIT
        if not ai_rate_limiter.is_allowed(user_id):
            wait_time = ai_rate_limiter.get_wait_time(user_id)
            return {
                'action': 'error',
                'message': f"‚è±Ô∏è –ó–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø–∏—Ç—ñ–≤! –ß–µ–∫–∞–π—Ç–µ {wait_time} —Å–µ–∫"
            }
        
        # –ó–≤–∏—á–∞–π–Ω–∞ –æ–±—Ä–æ–±–∫–∞
        try:
            # ... —ñ—Å–Ω—É—é—á–∏–π –∫–æ–¥ ...
            response = self.model.generate_content(prompt)
            return self._parse_ai_response(response.text, menu_items)
        
        except Exception as e:
            logger.error(f"‚ùå AI error: {e}")
            return {
                'action': 'error',
                'message': '–ü–æ–º–∏–ª–∫–∞ AI –æ–±—Ä–æ–±–∫–∏'
            }
