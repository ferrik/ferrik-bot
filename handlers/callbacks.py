"""
–¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤—Å—ñ—Ö callback –∑–∞–ø–∏—Ç—ñ–≤
"""

import logging
from services.telegram import tg_answer_callback
from handlers.menu import (
    show_menu_with_cart_buttons,
    show_categories,
    handle_add_to_cart_callback,
    handle_quick_quantity_selector,
    handle_add_quantity_callback,
    show_item_details
)
from handlers.cart import (
    show_cart,
    handle_cart_quantity_change,
    remove_item_from_cart,
    clear_cart
)
from handlers.order import (
    start_checkout_process,
    handle_delivery_type,
    handle_payment_method,
    handle_delivery_time,
    confirm_order,
    cancel_order
)

logger = logging.getLogger('ferrik')


def route_callback(chat_id, callback_data, callback_id, message_id=None):
    """
    –ì–æ–ª–æ–≤–Ω–∏–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–æ–±–∫–∏ callback –∑–∞–ø–∏—Ç—ñ–≤
    
    Args:
        chat_id: ID —á–∞—Ç—É
        callback_data: –î–∞–Ω—ñ callback
        callback_id: ID callback –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        message_id: ID –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
    """
    try:
        logger.info(f"Routing callback: {callback_data} from chat {chat_id}")
        
        # ============= –ú–ï–ù–Æ =============
        
        # –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        if callback_data == "show_categories":
            show_categories(chat_id)
            tg_answer_callback(callback_id)
            
        # –ü–æ–∫–∞–∑–∞—Ç–∏ –º–µ–Ω—é –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
        elif callback_data.startswith("category_"):
            category = callback_data.replace("category_", "")
            show_menu_with_cart_buttons(chat_id, category=category, page=1)
            tg_answer_callback(callback_id)
            
        # –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è –º–µ–Ω—é
        elif callback_data.startswith("menu_page_"):
            parts = callback_data.split("_")
            category = parts[2] if parts[2] != "all" else None
            page = int(parts[3])
            show_menu_with_cart_buttons(chat_id, category=category, page=page)
            tg_answer_callback(callback_id)
            
        # –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫
        elif callback_data.startswith("add_to_cart_"):
            handle_add_to_cart_callback(chat_id, callback_data, callback_id)
            
        # –®–≤–∏–¥–∫–∏–π –≤–∏–±—ñ—Ä –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
        elif callback_data.startswith("quick_qty_"):
            handle_quick_quantity_selector(chat_id, callback_data, callback_id)
            
        # –î–æ–¥–∞—Ç–∏ –∑ –≤–∫–∞–∑–∞–Ω–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é
        elif callback_data.startswith("add_qty_"):
            handle_add_quantity_callback(chat_id, callback_data, callback_id)
            
        # –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç—Ä–∞–≤—É
        elif callback_data.startswith("item_details_"):
            item_id = callback_data.replace("item_details_", "")
            show_item_details(chat_id, item_id, callback_id)
            
        # ============= –ö–û–®–ò–ö =============
        
        # –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ—à–∏–∫
        elif callback_data == "show_cart":
            show_cart(chat_id)
            tg_answer_callback(callback_id)
            
        # –ó–º—ñ–Ω–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É
        elif callback_data.startswith("qty_plus_"):
            item_index = int(callback_data.replace("qty_plus_", ""))
            handle_cart_quantity_change(chat_id, "plus", item_index, callback_id)
            
        elif callback_data.startswith("qty_minus_"):
            item_index = int(callback_data.replace("qty_minus_", ""))
            handle_cart_quantity_change(chat_id, "minus", item_index, callback_id)
            
        # –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä –∑ –∫–æ—à–∏–∫–∞
        elif callback_data.startswith("remove_item_"):
            item_index = int(callback_data.replace("remove_item_", ""))
            remove_item_from_cart(chat_id, item_index, callback_id)
            
        # –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫
        elif callback_data == "clear_cart":
            clear_cart(chat_id, callback_id)
            
        # –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏
        elif callback_data == "continue_shopping":
            show_menu_with_cart_buttons(chat_id, page=1)
            tg_answer_callback(callback_id, "–ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –ø–æ–∫—É–ø–∫–∏! üõç")
            
        # ============= –ó–ê–ú–û–í–õ–ï–ù–ù–Ø =============
        
        # –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        elif callback_data == "checkout":
            start_checkout_process(chat_id)
            tg_answer_callback(callback_id)
            
        # –¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏
        elif callback_data.startswith("delivery_type_"):
            delivery_type = callback_data.replace("delivery_type_", "")
            handle_delivery_type(chat_id, delivery_type, callback_id)
            
        # –°–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏
        elif callback_data.startswith("payment_"):
            payment_method = callback_data.replace("payment_", "")
            handle_payment_method(chat_id, payment_method, callback_id)
            
        # –ß–∞—Å –¥–æ—Å—Ç–∞–≤–∫–∏
        elif callback_data.startswith("delivery_time_"):
            time = callback_data.replace("delivery_time_", "")
            handle_delivery_time(chat_id, time, callback_id)
            
        # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        elif callback_data == "confirm_order":
            confirm_order(chat_id, callback_id)
            
        # –°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        elif callback_data == "cancel_order":
            cancel_order(chat_id, callback_id)
            
        # –ó–º—ñ–Ω–∏—Ç–∏ –¥–∞–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        elif callback_data == "edit_order":
            tg_answer_callback(callback_id, "–§—É–Ω–∫—Ü—ñ—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ")
            # TODO: Implement order editing
            
        # ============= –Ü–ù–®–ï =============
        
        # No-op (–¥–ª—è –∫–Ω–æ–ø–æ–∫-—ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤)
        elif callback_data == "noop":
            tg_answer_callback(callback_id)
            
        # –°–∫–∞—Å—É–≤–∞—Ç–∏ –¥—ñ—é
        elif callback_data.startswith("cancel_"):
            tg_answer_callback(callback_id, "–°–∫–∞—Å–æ–≤–∞–Ω–æ")
            
        # –ù–µ–≤—ñ–¥–æ–º–∏–π callback
        else:
            logger.warning(f"Unknown callback_data: {callback_data}")
            tg_answer_callback(callback_id, "‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è")
        
    except Exception as e:
        logger.error(f"Error routing callback {callback_data}: {e}", exc_info=True)
        try:
            tg_answer_callback(callback_id, "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏", show_alert=True)
        except:
            pass


def handle_callback_query(update):
    """
    –û–±—Ä–æ–±–ª—è—î callback_query –∑ update
    
    Args:
        update: Dict –∑ –¥–∞–Ω–∏–º–∏ update –≤—ñ–¥ Telegram
    """
    try:
        callback_query = update.get('callback_query', {})
        
        chat_id = callback_query.get('message', {}).get('chat', {}).get('id')
        callback_id = callback_query.get('id')
        callback_data = callback_query.get('data')
        message_id = callback_query.get('message', {}).get('message_id')
        
        if not all([chat_id, callback_id, callback_data]):
            logger.error("Missing required callback data")
            return
        
        # –†–æ—É—Ç–∏–º–æ callback
        route_callback(chat_id, callback_data, callback_id, message_id)
        
    except Exception as e:
        logger.error(f"Error handling callback query: {e}", exc_info=True)
