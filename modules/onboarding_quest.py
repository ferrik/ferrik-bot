"""
üéÆ –û–Ω–±–æ—Ä–¥–∏–Ω–≥-–∫–≤–µ—Å—Ç –¥–ª—è –Ω–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ Ferrik Bot
"""
from enum import Enum
from typing import Dict, Optional
import json

class QuestStage(Enum):
    """–ï—Ç–∞–ø–∏ –∫–≤–µ—Å—Ç—É"""
    NOT_STARTED = 0
    CHOOSE_CATEGORY = 1
    ADD_TO_CART = 2
    CHECKOUT = 3
    COMPLETED = 4


class OnboardingQuest:
    """–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥-–∫–≤–µ—Å—Ç–æ–º"""
    
    # –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∏ –∑–∞ –µ—Ç–∞–ø–∏
    REWARDS = {
        QuestStage.CHOOSE_CATEGORY: {'badge': 'explorer', 'points': 10},
        QuestStage.ADD_TO_CART: {'badge': 'shopper', 'points': 20},
        QuestStage.COMPLETED: {'badge': 'first_order', 'points': 50, 'discount': 10}
    }
    
    @staticmethod
    def get_quest_intro():
        """–í—Å—Ç—É–ø –¥–æ –∫–≤–µ—Å—Ç—É"""
        return (
            "üéØ *–°–º–∞–∫–æ–≤–∏–π –∫–≤–µ—Å—Ç –¥–ª—è –Ω–æ–≤–∞—á–∫—ñ–≤!*\n\n"
            "–î–∞–≤–∞–π –ø–æ–∑–Ω–∞–π–æ–º–∏–º–æ—Å—è –±–ª–∏–∂—á–µ! –ü—Ä–æ–π–¥–∏ 3 –ø—Ä–æ—Å—Ç—ñ –∫—Ä–æ–∫–∏ —ñ –æ—Ç—Ä–∏–º–∞–π:\n\n"
            "‚ú® –ë–µ–π–¥–∂ ¬´–î–æ—Å–ª—ñ–¥–Ω–∏–∫ —Å–º–∞–∫—É¬ª\n"
            "üéÅ –ó–Ω–∏–∂–∫—É 10% –Ω–∞ –ø–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n"
            "‚≠ê 50 –±–æ–Ω—É—Å–Ω–∏—Ö –±–∞–ª—ñ–≤\n\n"
            "–ì–æ—Ç–æ–≤–∏–π(–∞) —Ä–æ–∑–ø–æ—á–∞—Ç–∏?"
        )
    
    @staticmethod
    def get_quest_keyboard(stage: QuestStage):
        """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –µ—Ç–∞–ø—É"""
        if stage == QuestStage.NOT_STARTED:
            return {
                'inline_keyboard': [
                    [{'text': 'üöÄ –†–æ–∑–ø–æ—á–∞—Ç–∏ –∫–≤–µ—Å—Ç!', 'callback_data': 'quest_start'}],
                    [{'text': '‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏', 'callback_data': 'quest_skip'}]
                ]
            }
        
        elif stage == QuestStage.CHOOSE_CATEGORY:
            return {
                'inline_keyboard': [
                    [
                        {'text': 'üçï –ü—ñ—Ü–∞', 'callback_data': 'quest_cat_pizza'},
                        {'text': 'üçî –ë—É—Ä–≥–µ—Ä–∏', 'callback_data': 'quest_cat_burgers'}
                    ],
                    [
                        {'text': 'üçú –°—É–ø–∏', 'callback_data': 'quest_cat_soups'},
                        {'text': 'ü•ó –°–∞–ª–∞—Ç–∏', 'callback_data': 'quest_cat_salads'}
                    ],
                    [
                        {'text': 'üç∞ –î–µ—Å–µ—Ä—Ç–∏', 'callback_data': 'quest_cat_desserts'}
                    ]
                ]
            }
        
        elif stage == QuestStage.ADD_TO_CART:
            return {
                'inline_keyboard': [
                    [{'text': 'üõí –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫', 'callback_data': 'quest_add_cart'}],
                    [{'text': 'üëÄ –í–∏–±—Ä–∞—Ç–∏ —ñ–Ω—à—É —Å—Ç—Ä–∞–≤—É', 'callback_data': 'quest_change_item'}]
                ]
            }
        
        elif stage == QuestStage.CHECKOUT:
            return {
                'inline_keyboard': [
                    [{'text': '‚úÖ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è', 'callback_data': 'quest_checkout'}],
                    [{'text': 'üìù –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫', 'callback_data': 'view_cart'}]
                ]
            }
        
        return None
    
    @staticmethod
    def get_stage_message(stage: QuestStage, context: Dict = None) -> str:
        """–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ—Ç–∞–ø—É"""
        messages = {
            QuestStage.CHOOSE_CATEGORY: (
                "üéØ *–ö—Ä–æ–∫ 1/3: –û–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é*\n\n"
                "–©–æ —Ç–µ–±–µ –Ω–∞–π–±—ñ–ª—å—à–µ –ø—Ä–∏–≤–∞–±–ª—é—î? –û–±–µ—Ä–∏ –æ–¥–Ω—É –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:\n\n"
                "üí° –ü–æ—Ä–∞–¥–∞: –ù–µ —Ö–≤–∏–ª—é–π—Å—è, –ø–æ—Ç—ñ–º –∑–º–æ–∂–µ—à –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ —Å—Ç—Ä–∞–≤–∏!"
            ),
            
            QuestStage.ADD_TO_CART: (
                f"üéØ *–ö—Ä–æ–∫ 2/3: –î–æ–¥–∞–π —Å—Ç—Ä–∞–≤—É*\n\n"
                f"{'–ß—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä! ' if context else ''}"
                f"–¢–µ–ø–µ—Ä –ø—Ä–æ—Å—Ç–æ –¥–æ–¥–∞–π –æ–±—Ä–∞–Ω—É —Å—Ç—Ä–∞–≤—É –≤ –∫–æ—à–∏–∫.\n\n"
                f"‚ú® –¢–∏ –æ—Ç—Ä–∏–º–∞—î—à +10 –±–∞–ª—ñ–≤ –∑–∞ —Ü–µ–π –∫—Ä–æ–∫!"
            ),
            
            QuestStage.CHECKOUT: (
                "üéØ *–ö—Ä–æ–∫ 3/3: –û—Ñ–æ—Ä–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è*\n\n"
                "–û—Å—Ç–∞–Ω–Ω—ñ–π –∫—Ä–æ–∫! –û—Ñ–æ—Ä–º–∏ —Å–≤–æ—î –ø–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.\n\n"
                "üéÅ –ü—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–∏ –æ—Ç—Ä–∏–º–∞—î—à:\n"
                "‚úÖ –ë–µ–π–¥–∂ ¬´–ü–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è¬ª\n"
                "‚úÖ –ó–Ω–∏–∂–∫—É 10% (–≤–∂–µ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ!)\n"
                "‚úÖ 50 –±–æ–Ω—É—Å–Ω–∏—Ö –±–∞–ª—ñ–≤\n\n"
                "–ì–æ—Ç–æ–≤–∏–π(–∞)?"
            ),
            
            QuestStage.COMPLETED: (
                "üéâ *–í—ñ—Ç–∞—é! –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!*\n\n"
                "–¢–∏ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ–π—à–æ–≤(–ª–∞) —Å–º–∞–∫–æ–≤–∏–π –∫–≤–µ—Å—Ç —ñ —Ç–µ–ø–µ—Ä –æ—Ñ—ñ—Ü—ñ–π–Ω–æ —î —á–∞—Å—Ç–∏–Ω–æ—é —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ Ferrik! üåü\n\n"
                "üìä *–¢–≤–æ—ó –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è:*\n"
                "üèÜ –ë–µ–π–¥–∂ ¬´–î–æ—Å–ª—ñ–¥–Ω–∏–∫ —Å–º–∞–∫—É¬ª\n"
                "üèÜ –ë–µ–π–¥–∂ ¬´–ü–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è¬ª\n"
                "‚≠ê 50 –±–æ–Ω—É—Å–Ω–∏—Ö –±–∞–ª—ñ–≤\n"
                "üéÅ –ó–Ω–∏–∂–∫–∞ 10% (–∞–∫—Ç–∏–≤–Ω–∞)\n\n"
                "–©–æ –¥–∞–ª—ñ? –ü–µ—Ä–µ–≥–ª—è–Ω—å –ø–æ–≤–Ω–µ –º–µ–Ω—é –∞–±–æ –¥—ñ–∑–Ω–∞–π—Å—è –ø—Ä–æ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –∞–∫—Ü—ñ—ó! üòä"
            )
        }
        
        return messages.get(stage, "")
    
    @staticmethod
    def award_completion_badge(user_id: int) -> Dict:
        """–í–∏–¥–∞—î –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É –∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∫–≤–µ—Å—Ç—É"""
        return {
            'user_id': user_id,
            'badges': ['explorer', 'shopper', 'first_order'],
            'points': 50,
            'discount': 10,
            'promo_code': f'FIRST{user_id}'
        }
    
    @staticmethod
    def track_progress(user_id: int, stage: QuestStage) -> Dict:
        """–í—ñ–¥—Å—Ç–µ–∂—É—î –ø—Ä–æ–≥—Ä–µ—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
        progress = {
            'user_id': user_id,
            'current_stage': stage.value,
            'completed_stages': [],
            'total_points': 0
        }
        
        # –î–æ–¥–∞—î–º–æ –±–∞–ª–∏ –∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ –µ—Ç–∞–ø–∏
        for completed_stage in QuestStage:
            if completed_stage.value <= stage.value and completed_stage in OnboardingQuest.REWARDS:
                progress['completed_stages'].append(completed_stage.name)
                progress['total_points'] += OnboardingQuest.REWARDS[completed_stage]['points']
        
        return progress


class QuestMessages:
    """–¢–µ–∫—Å—Ç–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –µ–º–æ—Ü—ñ—è–º–∏"""
    
    @staticmethod
    def get_encouragement():
        """–ü—ñ–¥–±–∞–¥—å–æ—Ä—é–≤–∞–ª—å–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
        import random
        messages = [
            "–ß—É–¥–æ–≤–æ! –¢–∏ –≤–ø–æ—Ä–∞—î—à—Å—è! üí™",
            "–°—É–ø–µ—Ä! –¢–∞–∫ —Ç—Ä–∏–º–∞—Ç–∏! ‚ú®",
            "–ú–æ–ª–æ–¥–µ—Ü—å! –ú–∞–π–∂–µ –≥–æ—Ç–æ–≤–æ! üåü",
            "–û–≥–æ! –¢–∏ —à–≤–∏–¥–∫–æ –≤—á–∏—à—Å—è! üöÄ",
            "–Ü–¥–µ–∞–ª—å–Ω–æ! –ó–∞–ª–∏—à–∏–≤—Å—è –æ—Å—Ç–∞–Ω–Ω—ñ–π –∫—Ä–æ–∫! üéØ"
        ]
        return random.choice(messages)
    
    @staticmethod
    def get_completion_celebration():
        """–°–≤—è—Ç–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
        return (
            "üéäüéâüéäüéâüéä\n\n"
            "–í–Ü–¢–ê–Ñ–ú–û –ó –ü–ï–†–®–ò–ú –ó–ê–ú–û–í–õ–ï–ù–ù–Ø–ú!\n\n"
            "üéäüéâüéäüéâüéä\n\n"
            "–¢–∏ —Ç–µ–ø–µ—Ä –æ—Ñ—ñ—Ü—ñ–π–Ω–æ —á–∞—Å—Ç–∏–Ω–∞ —Ä–æ–¥–∏–Ω–∏ Ferrik! "
            "–ó–∞–ø—Ä–æ—à—É–π –¥—Ä—É–∑—ñ–≤ —ñ –æ—Ç—Ä–∏–º—É–π –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –±–æ–Ω—É—Å–∏! ü§ó"
        )


# ============================================================================
# –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
# ============================================================================
class QuestDatabase:
    """–ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É –∫–≤–µ—Å—Ç—É –≤ –ë–î"""
    
    @staticmethod
    def save_progress(user_id: int, stage: QuestStage, data: Dict = None):
        """–ó–±–µ—Ä—ñ–≥–∞—î –ø—Ä–æ–≥—Ä–µ—Å –≤ –ë–î"""
        # –ü—Å–µ–≤–¥–æ–∫–æ–¥ –¥–ª—è —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó
        progress_data = {
            'user_id': user_id,
            'quest_stage': stage.value,
            'quest_data': json.dumps(data or {}),
            'completed': stage == QuestStage.COMPLETED
        }
        # INSERT –∞–±–æ UPDATE –≤ —Ç–∞–±–ª–∏—Ü—é user_quest_progress
        return progress_data
    
    @staticmethod
    def get_progress(user_id: int) -> Optional[QuestStage]:
        """–û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π –µ—Ç–∞–ø –∫–≤–µ—Å—Ç—É"""
        # –ü—Å–µ–≤–¥–æ–∫–æ–¥: SELECT quest_stage FROM user_quest_progress WHERE user_id = ?
        # –ü–æ–≤–µ—Ä—Ç–∞—î QuestStage enum
        pass
    
    @staticmethod
    def mark_completed(user_id: int):
        """–ü–æ–∑–Ω–∞—á–∞—î –∫–≤–µ—Å—Ç —è–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π"""
        # UPDATE user_quest_progress SET completed = 1, completed_at = NOW()
        pass


# ============================================================================
# –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è
# ============================================================================
if __name__ == "__main__":
    print("=== –û–Ω–±–æ—Ä–¥–∏–Ω–≥-–∫–≤–µ—Å—Ç ===\n")
    
    # –¢–µ—Å—Ç –≤—Å—ñ—Ö –µ—Ç–∞–ø—ñ–≤
    for stage in QuestStage:
        if stage != QuestStage.NOT_STARTED:
            print(f"\n{'='*50}")
            print(f"–ï–¢–ê–ü: {stage.name}")
            print(f"{'='*50}")
            print(OnboardingQuest.get_stage_message(stage))
            print(f"\n{QuestMessages.get_encouragement()}")
    
    print("\n\n" + "="*50)
    print("COMPLETION!")
    print("="*50)
    print(QuestMessages.get_completion_celebration())
