"""
ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ Ferrik Bot
"""
import hashlib
import logging
from typing import Dict, Optional, List
from datetime import datetime

logger = logging.getLogger(__name__)


class ReferralSystem:
    """–°–∏—Å—Ç–µ–º–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤"""
    
    # –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
    REWARDS = {
        'referrer': {
            'bonus_per_friend': 50,  # –ë–∞–ª–∏ –∑–∞ –∫–æ–∂–Ω–æ–≥–æ –¥—Ä—É–≥–∞
            'discount_per_friend': 5,  # % –∑–Ω–∏–∂–∫–∏
            'first_friend_bonus': 100  # –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –±–æ–Ω—É—Å –∑–∞ –ø–µ—Ä—à–æ–≥–æ –¥—Ä—É–≥–∞
        },
        'referee': {
            'welcome_bonus': 30,  # –ë–∞–ª–∏ –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É
            'welcome_discount': 10,  # % –∑–Ω–∏–∂–∫–∏ –Ω–∞ –ø–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
            'promo_valid_days': 14  # –î–Ω—ñ –¥—ñ—ó –ø—Ä–æ–º–æ–∫–æ–¥—É
        }
    }
    
    @staticmethod
    def generate_referral_code(user_id: int) -> str:
        """
        –ì–µ–Ω–µ—Ä—É—î —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –∫–æ–¥ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        
        –§–æ—Ä–º–∞—Ç: FERRIK_XXXXXX
        """
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ö–µ—à –Ω–∞ –æ—Å–Ω–æ–≤—ñ user_id
        hash_input = f"ferrik_{user_id}_{datetime.now().year}"
        hash_obj = hashlib.sha256(hash_input.encode())
        hash_hex = hash_obj.hexdigest()[:6].upper()
        
        return f"FERRIK_{hash_hex}"
    
    @staticmethod
    def validate_referral_code(code: str) -> bool:
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥—É"""
        if not code:
            return False
        
        # –ë–∞–∑–æ–≤–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è —Ñ–æ—Ä–º–∞—Ç—É
        if not code.startswith('FERRIK_'):
            return False
        
        if len(code) != 13:  # FERRIK_ + 6 —Å–∏–º–≤–æ–ª—ñ–≤
            return False
        
        return True
    
    @staticmethod
    def get_referral_info(user_id: int, referrals_count: int = 0) -> Dict:
        """–ü–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É –ø—Ä–æ–≥—Ä–∞–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
        code = ReferralSystem.generate_referral_code(user_id)
        
        # –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
        total_bonus = referrals_count * ReferralSystem.REWARDS['referrer']['bonus_per_friend']
        if referrals_count > 0:
            total_bonus += ReferralSystem.REWARDS['referrer']['first_friend_bonus']
        
        total_discount = min(25, referrals_count * ReferralSystem.REWARDS['referrer']['discount_per_friend'])
        
        return {
            'code': code,
            'referrals_count': referrals_count,
            'total_bonus': total_bonus,
            'total_discount': total_discount,
            'potential_next_bonus': ReferralSystem.REWARDS['referrer']['bonus_per_friend']
        }
    
    @staticmethod
    def format_referral_message(referral_info: Dict, user_name: str = None) -> str:
        """–§–æ—Ä–º–∞—Ç—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É –ø—Ä–æ–≥—Ä–∞–º—É"""
        code = referral_info['code']
        referrals_count = referral_info['referrals_count']
        total_bonus = referral_info['total_bonus']
        total_discount = referral_info['total_discount']
        next_bonus = referral_info['potential_next_bonus']
        
        result = "üéÅ **–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ Ferrik**\n\n"
        
        if user_name:
            result += f"–ü—Ä–∏–≤—ñ—Ç, {user_name}! "
        
        result += "–ó–∞–ø—Ä–æ—à—É–π –¥—Ä—É–∑—ñ–≤ —ñ –æ—Ç—Ä–∏–º—É–π –±–æ–Ω—É—Å–∏! ü§ó\n\n"
        
        result += f"üîë **–¢–≤—ñ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –∫–æ–¥:**\n"
        result += f"`{code}`\n\n"
        
        result += "üí° **–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î:**\n"
        result += "1Ô∏è‚É£ –ü–æ–¥—ñ–ª–∏—Å—å —Å–≤–æ—ó–º –∫–æ–¥–æ–º –∑ –¥—Ä—É–∑—è–º–∏\n"
        result += "2Ô∏è‚É£ –î—Ä—É–≥ –≤–≤–æ–¥–∏—Ç—å –∫–æ–¥ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó\n"
        result += "3Ô∏è‚É£ –í–∏ –æ–±–∏–¥–≤–∞ –æ—Ç—Ä–∏–º—É—î—Ç–µ –±–æ–Ω—É—Å–∏!\n\n"
        
        result += "üéÅ **–í–∏–Ω–∞–≥–æ—Ä–æ–¥–∏:**\n"
        result += f"‚Ä¢ –¢–∏ –æ—Ç—Ä–∏–º—É—î—à: **{next_bonus} –±–∞–ª—ñ–≤** + **5% –∑–Ω–∏–∂–∫–∞**\n"
        result += f"‚Ä¢ –¢–≤—ñ–π –¥—Ä—É–≥ –æ—Ç—Ä–∏–º—É—î: **30 –±–∞–ª—ñ–≤** + **10% –∑–Ω–∏–∂–∫–∞**\n\n"
        
        if referrals_count > 0:
            result += "üìä **–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n"
            result += f"üë• –ó–∞–ø—Ä–æ—à–µ–Ω–∏—Ö –¥—Ä—É–∑—ñ–≤: **{referrals_count}**\n"
            result += f"‚≠ê –ó–∞—Ä–æ–±–ª–µ–Ω–æ –±–∞–ª—ñ–≤: **{total_bonus}**\n"
            result += f"üí∞ –ê–∫—Ç–∏–≤–Ω–∞ –∑–Ω–∏–∂–∫–∞: **{total_discount}%**\n\n"
        
        result += "üí¨ –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å –∫–æ–¥–æ–º: /share_referral"
        
        return result
    
    @staticmethod
    def create_share_message(code: str, user_name: str = None) -> str:
        """–°—Ç–≤–æ—Ä—é—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —à–µ—Ä—ñ–Ω–≥—É"""
        sender = user_name if user_name else "–¢–≤—ñ–π –¥—Ä—É–≥"
        
        message = f"üç¥ {sender} –∑–∞–ø—Ä–æ—à—É—î —Ç–µ–±–µ –≤ Ferrik!\n\n"
        message += "Ferrik ‚Äî —Ü–µ –Ω–∞–π–∫—Ä–∞—â–∏–π —Å–ø–æ—Å—ñ–± –∑–∞–º–æ–≤–∏—Ç–∏ —Å–º–∞—á–Ω—É —ó–∂—É –∑ –¥–æ—Å—Ç–∞–≤–∫–æ—é! üöÄ\n\n"
        message += "üéÅ **–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π –º—ñ–π –∫–æ–¥ —ñ –æ—Ç—Ä–∏–º–∞–π:**\n"
        message += "‚Ä¢ 30 –±–æ–Ω—É—Å–Ω–∏—Ö –±–∞–ª—ñ–≤\n"
        message += "‚Ä¢ 10% –∑–Ω–∏–∂–∫–∏ –Ω–∞ –ø–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n"
        message += "‚Ä¢ –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω—É –¥–æ—Å—Ç–∞–≤–∫—É*\n\n"
        message += f"üîë –ö–æ–¥: `{code}`\n\n"
        message += "üëâ –ù–∞—Ç–∏—Å–Ω–∏: @FerrikBot —ñ –≤–≤–µ–¥–∏ –∫–æ–¥ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó!\n\n"
        message += "_*–£–º–æ–≤–∏ –∞–∫—Ü—ñ—ó –Ω–∞ —Å–∞–π—Ç—ñ_"
        
        return message
    
    @staticmethod
    def create_referral_keyboard(code: str) -> Dict:
        """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ—ó –ø—Ä–æ–≥—Ä–∞–º–∏"""
        share_url = f"https://t.me/share/url?url=https://t.me/FerrikBot?start={code}&text=–ü—Ä–∏—î–¥–Ω—É–π—Å—è –¥–æ Ferrik! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π –º—ñ–π –∫–æ–¥ {code} —ñ –æ—Ç—Ä–∏–º–∞–π –∑–Ω–∏–∂–∫—É!"
        
        return {
            'inline_keyboard': [
                [
                    {'text': 'üì§ –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å –∫–æ–¥–æ–º', 'url': share_url}
                ],
                [
                    {'text': 'üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏ –∫–æ–¥', 'callback_data': f'copy_{code}'},
                    {'text': 'üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'callback_data': 'ref_stats'}
                ],
                [
                    {'text': 'üí° –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?', 'callback_data': 'ref_help'},
                    {'text': 'üè† –ì–æ–ª–æ–≤–Ω–∞', 'callback_data': 'main_menu'}
                ]
            ]
        }
    
    @staticmethod
    def apply_referral_bonus(referrer_id: int, referee_id: int) -> Dict:
        """
        –ó–∞—Å—Ç–æ—Å–æ–≤—É—î –±–æ–Ω—É—Å–∏ –¥–ª—è –æ–±–æ—Ö —É—á–∞—Å–Ω–∏–∫—ñ–≤
        
        Returns:
            Dict –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
        """
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ, —á–∏ —Ü–µ –ø–µ—Ä—à–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª
        # (–í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤ –ë–î)
        is_first_referral = True  # Placeholder
        
        # –ë–æ–Ω—É—Å–∏ –¥–ª—è —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        referrer_bonus = ReferralSystem.REWARDS['referrer']['bonus_per_friend']
        if is_first_referral:
            referrer_bonus += ReferralSystem.REWARDS['referrer']['first_friend_bonus']
        
        referrer_discount = ReferralSystem.REWARDS['referrer']['discount_per_friend']
        
        # –ë–æ–Ω—É—Å–∏ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞
        referee_bonus = ReferralSystem.REWARDS['referee']['welcome_bonus']
        referee_discount = ReferralSystem.REWARDS['referee']['welcome_discount']
        
        return {
            'referrer': {
                'user_id': referrer_id,
                'bonus_points': referrer_bonus,
                'discount_percent': referrer_discount,
                'is_first': is_first_referral
            },
            'referee': {
                'user_id': referee_id,
                'bonus_points': referee_bonus,
                'discount_percent': referee_discount,
                'promo_code': f'WELCOME{referee_id}'
            }
        }
    
    @staticmethod
    def format_bonus_notification(bonus_data: Dict, user_type: str) -> str:
        """–§–æ—Ä–º–∞—Ç—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ—Ç—Ä–∏–º–∞–Ω—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É"""
        if user_type == 'referrer':
            bonus_points = bonus_data['bonus_points']
            discount = bonus_data['discount_percent']
            is_first = bonus_data.get('is_first', False)
            
            result = "üéâ **–í—ñ—Ç–∞—î–º–æ! –¢–≤—ñ–π –¥—Ä—É–≥ –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ Ferrik!**\n\n"
            result += "üéÅ –¢–∏ –æ—Ç—Ä–∏–º—É—î—à:\n"
            result += f"‚Ä¢ **+{bonus_points} –±–∞–ª—ñ–≤**\n"
            result += f"‚Ä¢ **+{discount}% –∑–Ω–∏–∂–∫–∏** –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n"
            
            if is_first:
                result += "\n‚ú® –¶–µ —Ç–≤—ñ–π –ø–µ—Ä—à–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª ‚Äî –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –±–æ–Ω—É—Å!\n"
            
            result += "\nüí° –ó–∞–ø—Ä–æ—à—É–π –±—ñ–ª—å—à–µ –¥—Ä—É–∑—ñ–≤ —ñ –∑–±—ñ–ª—å—à—É–π —Å–≤–æ—ó –±–æ–Ω—É—Å–∏!"
            
        else:  # referee
            bonus_points = bonus_data['bonus_points']
            discount = bonus_data['discount_percent']
            promo = bonus_data['promo_code']
            
            result = "üéä **–í—ñ—Ç–∞—î–º–æ –≤ Ferrik!**\n\n"
            result += "–¢–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –∫–æ–¥!\n\n"
            result += "üéÅ –¢–≤–æ—ó –±–æ–Ω—É—Å–∏:\n"
            result += f"‚Ä¢ **{bonus_points} –±–∞–ª—ñ–≤** –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫\n"
            result += f"‚Ä¢ **{discount}% –∑–Ω–∏–∂–∫–∞** –Ω–∞ –ø–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n"
            result += f"‚Ä¢ –ü—Ä–æ–º–æ–∫–æ–¥: `{promo}`\n\n"
            result += "üëâ –ü–µ—Ä–µ–≥–ª—è–Ω—å –º–µ–Ω—é: /menu"
        
        return result


class ReferralDatabase:
    """–†–æ–±–æ—Ç–∞ –∑ –ë–î –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤"""
    
    @staticmethod
    def save_referral(referrer_id: int, referee_id: int, code: str) -> bool:
        """–ó–±–µ—Ä—ñ–≥–∞—î –∑–≤'—è–∑–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª-—Ä–µ—Ñ–µ—Ä–µ—Ä"""
        # –ü—Å–µ–≤–¥–æ–∫–æ–¥ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –ë–î
        # INSERT INTO referrals (referrer_id, referee_id, code, created_at)
        logger.info(f"Referral saved: {referrer_id} -> {referee_id} (code: {code})")
        return True
    
    @staticmethod
    def get_referrals_count(user_id: int) -> int:
        """–û—Ç—Ä–∏–º—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
        # SELECT COUNT(*) FROM referrals WHERE referrer_id = ?
        return 0  # Placeholder
    
    @staticmethod
    def get_referrer_by_code(code: str) -> Optional[int]:
        """–ó–Ω–∞—Ö–æ–¥–∏—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–º –∫–æ–¥–æ–º"""
        # SELECT user_id FROM users WHERE referral_code = ?
        return None  # Placeholder
    
    @staticmethod
    def is_code_used(user_id: int) -> bool:
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –∫–æ–¥"""
        # SELECT COUNT(*) FROM referrals WHERE referee_id = ?
        return False  # Placeholder


# ============================================================================
# –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è
# ============================================================================
if __name__ == "__main__":
    print("=== –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ ===\n")
    
    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–¥—É
    user_id = 12345
    code = ReferralSystem.generate_referral_code(user_id)
    print(f"–ö–æ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {code}\n")
    
    # –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É –ø—Ä–æ–≥—Ä–∞–º—É
    ref_info = ReferralSystem.get_referral_info(user_id, referrals_count=3)
    print(ReferralSystem.format_referral_message(ref_info, "–û–ª–µ–∫—Å–∞–Ω–¥—Ä"))
    
    print("\n\n=== –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —à–µ—Ä—ñ–Ω–≥—É ===")
    print(ReferralSystem.create_share_message(code, "–ú–∞—Ä—ñ—è"))
    
    print("\n\n=== –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –±–æ–Ω—É—Å—ñ–≤ ===")
    bonus_data = ReferralSystem.apply_referral_bonus(12345, 67890)
    print("–†–µ—Ñ–µ—Ä–µ—Ä –æ—Ç—Ä–∏–º—É—î:")
    print(ReferralSystem.format_bonus_notification(bonus_data['referrer'], 'referrer'))
    print("\n\n–†–µ—Ñ–µ—Ä–∞–ª –æ—Ç—Ä–∏–º—É—î:")
    print(ReferralSystem.format_bonus_notification(bonus_data['referee'], 'referee'))
