-- ============================================================================
-- Ferrik Bot 2.0 - –ü–æ–≤–Ω–∞ —Å—Ö–µ–º–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
-- ============================================================================

-- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    telegram_user_id INTEGER UNIQUE NOT NULL,
    username TEXT,
    first_name TEXT,
    last_name TEXT,
    phone TEXT,
    address TEXT,
    
    -- –ì–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è
    total_xp INTEGER DEFAULT 0,
    level INTEGER DEFAULT 1,
    bonus_points INTEGER DEFAULT 0,
    
    -- –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞
    referral_code TEXT UNIQUE,
    referred_by INTEGER,  -- ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —â–æ –∑–∞–ø—Ä–æ—Å–∏–≤
    
    -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_orders INTEGER DEFAULT 0,
    total_spent REAL DEFAULT 0.0,
    
    -- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    notifications_enabled BOOLEAN DEFAULT 1,
    language TEXT DEFAULT 'uk',
    
    -- –ú–µ—Ç–∞–¥–∞–Ω—ñ
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_active_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (referred_by) REFERENCES users(telegram_user_id)
);

-- –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è users
CREATE INDEX idx_users_telegram_id ON users(telegram_user_id);
CREATE INDEX idx_users_referral_code ON users(referral_code);


-- ============================================================================
-- –°—Ç–∞–Ω–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
-- ============================================================================
CREATE TABLE IF NOT EXISTS user_states (
    user_id INTEGER PRIMARY KEY,
    state TEXT NOT NULL DEFAULT 'idle',
    state_data TEXT,  -- JSON –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id)
);


-- ============================================================================
-- –ö–æ—à–∏–∫–∏
-- ============================================================================
CREATE TABLE IF NOT EXISTS user_carts (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    item_id TEXT NOT NULL,
    item_name TEXT NOT NULL,
    category TEXT,
    quantity INTEGER DEFAULT 1,
    price REAL NOT NULL,
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id),
    UNIQUE(user_id, item_id)
);

CREATE INDEX idx_carts_user_id ON user_carts(user_id);


-- ============================================================================
-- –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è
-- ============================================================================
CREATE TABLE IF NOT EXISTS orders (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    order_number TEXT UNIQUE NOT NULL,
    user_id INTEGER NOT NULL,
    
    -- –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    phone TEXT NOT NULL,
    address TEXT NOT NULL,
    
    -- –î–∞–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    items_json TEXT NOT NULL,  -- JSON –∑ —Ç–æ–≤–∞—Ä–∞–º–∏
    total_amount REAL NOT NULL,
    delivery_cost REAL DEFAULT 0.0,
    discount_amount REAL DEFAULT 0.0,
    final_amount REAL NOT NULL,
    
    -- –°—Ç–∞—Ç—É—Å
    status TEXT DEFAULT 'new',
    payment_method TEXT DEFAULT 'cash',
    payment_status TEXT DEFAULT 'pending',
    
    -- –î–æ—Å—Ç–∞–≤–∫–∞
    estimated_delivery_time INTEGER,  -- —Ö–≤–∏–ª–∏–Ω–∏
    actual_delivery_time INTEGER,
    courier_id INTEGER,
    
    -- –ü—Ä–æ–º–æ–∫–æ–¥
    promo_code TEXT,
    promo_discount REAL DEFAULT 0.0,
    
    -- –ú–µ—Ç–∞–¥–∞–Ω—ñ
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    delivered_at TIMESTAMP,
    cancelled_at TIMESTAMP,
    
    -- –í—ñ–¥–≥—É–∫
    rating INTEGER,
    review_text TEXT,
    reviewed_at TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id)
);

CREATE INDEX idx_orders_user_id ON orders(user_id);
CREATE INDEX idx_orders_status ON orders(status);
CREATE INDEX idx_orders_created_at ON orders(created_at);


-- ============================================================================
-- –Ü—Å—Ç–æ—Ä—ñ—è —Å—Ç–∞—Ç—É—Å—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω—å
-- ============================================================================
CREATE TABLE IF NOT EXISTS order_status_history (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    order_id INTEGER NOT NULL,
    old_status TEXT,
    new_status TEXT NOT NULL,
    comment TEXT,
    changed_by TEXT,  -- system/admin/user
    changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (order_id) REFERENCES orders(id)
);

CREATE INDEX idx_status_history_order_id ON order_status_history(order_id);


-- ============================================================================
-- –ë–µ–π–¥–∂—ñ —Ç–∞ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è
-- ============================================================================
CREATE TABLE IF NOT EXISTS badges (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    badge_type TEXT UNIQUE NOT NULL,
    name TEXT NOT NULL,
    description TEXT,
    emoji TEXT,
    xp_reward INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- –ü–æ–ø–µ—Ä–µ–¥–Ω—å–æ –∑–∞–ø–æ–≤–Ω—é—î–º–æ –±–µ–π–¥–∂—ñ
INSERT OR IGNORE INTO badges (badge_type, name, description, emoji, xp_reward) VALUES
    ('explorer', '–î–æ—Å–ª—ñ–¥–Ω–∏–∫ —Å–º–∞–∫—É', '–ü–µ—Ä–µ–≥–ª—è–Ω—É–≤ –º–µ–Ω—é –≤–ø–µ—Ä—à–µ', 'üîç', 10),
    ('first_order', '–ü–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è', '–ó—Ä–æ–±–∏–≤ –ø–µ—Ä—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è', 'üéâ', 50),
    ('shopper', '–ü–æ–∫—É–ø–µ—Ü—å', '–î–æ–¥–∞–≤ —Ç–æ–≤–∞—Ä —É –∫–æ—à–∏–∫', 'üõí', 20),
    ('regular', '–ü–æ—Å—Ç—ñ–π–Ω–∏–π –∫–ª—ñ—î–Ω—Ç', '10 –∑–∞–º–æ–≤–ª–µ–Ω—å', '‚≠ê', 100),
    ('foodie', '–§—É–¥—ñ', '25 –∑–∞–º–æ–≤–ª–µ–Ω—å', 'üçΩÔ∏è', 250),
    ('gourmet', '–ì—É—Ä–º–∞–Ω', '50 –∑–∞–º–æ–≤–ª–µ–Ω—å', 'üë®‚Äçüç≥', 500),
    ('legend', '–õ–µ–≥–µ–Ω–¥–∞', '100 –∑–∞–º–æ–≤–ª–µ–Ω—å', 'üèÜ', 1000),
    ('pizza_lover', '–õ—é–±–∏—Ç–µ–ª—å –ø—ñ—Ü–∏', '–ó–∞–º–æ–≤–∏–≤ 10 –ø—ñ—Ü', 'üçï', 150),
    ('sweet_tooth', '–õ–∞—Å—É–Ω—á–∏–∫', '–ó–∞–º–æ–≤–∏–≤ 10 –¥–µ—Å–µ—Ä—Ç—ñ–≤', 'üç∞', 150),
    ('healthy', '–ó–¥–æ—Ä–æ–≤–∏–π —Å—Ç–∏–ª—å', '–ó–∞–º–æ–≤–∏–≤ 10 —Å–∞–ª–∞—Ç—ñ–≤', 'ü•ó', 150),
    ('night_owl', '–ù—ñ—á–Ω–∞ —Å–æ–≤–∞', '5 –∑–∞–º–æ–≤–ª–µ–Ω—å –ø—ñ—Å–ª—è 22:00', 'ü¶â', 75),
    ('early_bird', '–†–∞–Ω–Ω—è –ø—Ç–∞—à–∫–∞', '5 –∑–∞–º–æ–≤–ª–µ–Ω—å –¥–æ 9:00', 'üê¶', 75),
    ('referrer', '–î—Ä—É–≥ –¥—Ä—É–∑—ñ–≤', '–ó–∞–ø—Ä–æ—Å–∏–≤ 3 –¥—Ä—É–∑—ñ–≤', 'ü§ù', 200),
    ('influencer', '–Ü–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä', '–ó–∞–ø—Ä–æ—Å–∏–≤ 10 –¥—Ä—É–∑—ñ–≤', 'üì±', 500),
    ('reviewer', '–†–µ—Ü–µ–Ω–∑–µ–Ω—Ç', '–ó–∞–ª–∏—à–∏–≤ 5 –≤—ñ–¥–≥—É–∫—ñ–≤', 'üìù', 100),
    ('critic', '–ö—Ä–∏—Ç–∏–∫', '–ó–∞–ª–∏—à–∏–≤ 20 –≤—ñ–¥–≥—É–∫—ñ–≤', 'üé≠', 300);


-- –ë–µ–π–¥–∂—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
CREATE TABLE IF NOT EXISTS user_badges (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    badge_type TEXT NOT NULL,
    earned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id),
    FOREIGN KEY (badge_type) REFERENCES badges(badge_type),
    UNIQUE(user_id, badge_type)
);

CREATE INDEX idx_user_badges_user_id ON user_badges(user_id);


-- ============================================================================
-- –Ü—Å—Ç–æ—Ä—ñ—è –¥–æ—Å–≤—ñ–¥—É (XP)
-- ============================================================================
CREATE TABLE IF NOT EXISTS xp_history (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    amount INTEGER NOT NULL,
    reason TEXT NOT NULL,  -- order/badge/referral/review
    reference_id INTEGER,  -- ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –±–µ–π–¥–∂–∞ —Ç–æ—â–æ
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id)
);

CREATE INDEX idx_xp_history_user_id ON xp_history(user_id);


-- ============================================================================
-- –ö–≤–µ—Å—Ç–∏ —Ç–∞ —á–µ–ª–µ–Ω–¥–∂—ñ
-- ============================================================================
CREATE TABLE IF NOT EXISTS user_quest_progress (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    quest_type TEXT NOT NULL,  -- onboarding/weekly/special
    quest_stage INTEGER DEFAULT 0,
    quest_data TEXT,  -- JSON –∑ –ø—Ä–æ–≥—Ä–µ—Å–æ–º
    completed BOOLEAN DEFAULT 0,
    completed_at TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id)
);

CREATE INDEX idx_quest_user_id ON user_quest_progress(user_id);


-- ============================================================================
-- –†–µ—Ñ–µ—Ä–∞–ª–∏
-- ============================================================================
CREATE TABLE IF NOT EXISTS referrals (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    referrer_id INTEGER NOT NULL,  -- –•—Ç–æ –∑–∞–ø—Ä–æ—Å–∏–≤
    referee_id INTEGER NOT NULL,   -- –ö–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∏–≤
    referral_code TEXT NOT NULL,
    
    -- –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∏
    referrer_bonus_given BOOLEAN DEFAULT 0,
    referee_bonus_given BOOLEAN DEFAULT 0,
    
    -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    referee_first_order_at TIMESTAMP,
    total_referee_orders INTEGER DEFAULT 0,
    
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (referrer_id) REFERENCES users(telegram_user_id),
    FOREIGN KEY (referee_id) REFERENCES users(telegram_user_id),
    UNIQUE(referee_id)  -- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –±—É—Ç–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∏–π —Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑
);

CREATE INDEX idx_referrals_referrer_id ON referrals(referrer_id);
CREATE INDEX idx_referrals_referee_id ON referrals(referee_id);


-- ============================================================================
-- –ü—Ä–æ–º–æ–∫–æ–¥–∏
-- ============================================================================
CREATE TABLE IF NOT EXISTS promo_codes (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    code TEXT UNIQUE NOT NULL,
    discount_type TEXT NOT NULL,  -- percent/fixed
    discount_value REAL NOT NULL,
    
    -- –û–±–º–µ–∂–µ–Ω–Ω—è
    min_order_amount REAL DEFAULT 0.0,
    max_uses INTEGER,
    max_uses_per_user INTEGER DEFAULT 1,
    
    -- –ü–µ—Ä—ñ–æ–¥ –¥—ñ—ó
    valid_from TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    valid_until TIMESTAMP,
    
    -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    times_used INTEGER DEFAULT 0,
    
    -- –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ
    user_specific INTEGER,  -- –î–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    first_order_only BOOLEAN DEFAULT 0,
    
    active BOOLEAN DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_specific) REFERENCES users(telegram_user_id)
);

CREATE INDEX idx_promo_codes_code ON promo_codes(code);
CREATE INDEX idx_promo_codes_active ON promo_codes(active);


-- –Ü—Å—Ç–æ—Ä—ñ—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–æ–º–æ–∫–æ–¥—ñ–≤
CREATE TABLE IF NOT EXISTS promo_code_usage (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    promo_code_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    order_id INTEGER NOT NULL,
    discount_applied REAL NOT NULL,
    used_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (promo_code_id) REFERENCES promo_codes(id),
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id),
    FOREIGN KEY (order_id) REFERENCES orders(id)
);

CREATE INDEX idx_promo_usage_user_id ON promo_code_usage(user_id);


-- ============================================================================
-- –í—ñ–¥–≥—É–∫–∏
-- ============================================================================
CREATE TABLE IF NOT EXISTS reviews (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    order_id INTEGER NOT NULL,
    
    -- –û—Ü—ñ–Ω–∫–∏
    overall_rating INTEGER NOT NULL,  -- 1-5
    food_quality INTEGER,  -- 1-5
    delivery_speed INTEGER,  -- 1-5
    service_quality INTEGER,  -- 1-5
    
    -- –¢–µ–∫—Å—Ç–æ–≤–∏–π –≤—ñ–¥–≥—É–∫
    comment TEXT,
    
    -- –ú–æ–¥–µ—Ä–∞—Ü—ñ—è
    approved BOOLEAN DEFAULT 0,
    moderated_at TIMESTAMP,
    
    -- –†–µ–∞–∫—Ü—ñ—ó
    helpful_count INTEGER DEFAULT 0,
    
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id),
    FOREIGN KEY (order_id) REFERENCES orders(id),
    UNIQUE(user_id, order_id)
);

CREATE INDEX idx_reviews_user_id ON reviews(user_id);
CREATE INDEX idx_reviews_order_id ON reviews(order_id);


-- ============================================================================
-- –£–ª—é–±–ª–µ–Ω—ñ —Ç–æ–≤–∞—Ä–∏
-- ============================================================================
CREATE TABLE IF NOT EXISTS user_favorites (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    item_id TEXT NOT NULL,
    item_name TEXT NOT NULL,
    category TEXT,
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id),
    UNIQUE(user_id, item_id)
);

CREATE INDEX idx_favorites_user_id ON user_favorites(user_id);


-- ============================================================================
-- –Ü—Å—Ç–æ—Ä—ñ—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
-- ============================================================================
CREATE TABLE IF NOT EXISTS user_activity_log (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    action_type TEXT NOT NULL,  -- view_menu/add_cart/search/etc
    action_data TEXT,  -- JSON –∑ –¥–µ—Ç–∞–ª—è–º–∏
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id)
);

CREATE INDEX idx_activity_user_id ON user_activity_log(user_id);
CREATE INDEX idx_activity_created_at ON user_activity_log(created_at);


-- ============================================================================
-- –ö–µ—à –º–µ–Ω—é
-- ============================================================================
CREATE TABLE IF NOT EXISTS menu_cache (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    cache_key TEXT UNIQUE NOT NULL,
    cache_data TEXT NOT NULL,  -- JSON
    expires_at TIMESTAMP NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_menu_cache_key ON menu_cache(cache_key);
CREATE INDEX idx_menu_cache_expires ON menu_cache(expires_at);


-- ============================================================================
-- –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è (—á–µ—Ä–≥–∞)
-- ============================================================================
CREATE TABLE IF NOT EXISTS notification_queue (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    message_type TEXT NOT NULL,  -- order_status/promo/reminder
    message_text TEXT NOT NULL,
    message_data TEXT,  -- JSON
    
    -- –°—Ç–∞—Ç—É—Å
    sent BOOLEAN DEFAULT 0,
    sent_at TIMESTAMP,
    failed BOOLEAN DEFAULT 0,
    error_message TEXT,
    
    -- –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è
    scheduled_for TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(telegram_user_id)
);

CREATE INDEX idx_notifications_user_id ON notification_queue(user_id);
CREATE INDEX idx_notifications_sent ON notification_queue(sent);
CREATE INDEX idx_notifications_scheduled ON notification_queue(scheduled_for);


-- ============================================================================
-- –ê–¥–º—ñ–Ω-–ª–æ–≥
-- ============================================================================
CREATE TABLE IF NOT EXISTS admin_log (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    admin_user_id INTEGER,
    action TEXT NOT NULL,
    entity_type TEXT,  -- order/user/promo
    entity_id INTEGER,
    details TEXT,  -- JSON
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (admin_user_id) REFERENCES users(telegram_user_id)
);

CREATE INDEX idx_admin_log_created_at ON admin_log(created_at);


-- ============================================================================
-- –¢—Ä–∏–≥–µ—Ä–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è updated_at
-- ============================================================================
CREATE TRIGGER update_users_timestamp 
AFTER UPDATE ON users
BEGIN
    UPDATE users SET updated_at = CURRENT_TIMESTAMP WHERE id = NEW.id;
END;

CREATE TRIGGER update_orders_timestamp 
AFTER UPDATE ON orders
BEGIN
    UPDATE orders SET updated_at = CURRENT_TIMESTAMP WHERE id = NEW.id;
END;


-- ============================================================================
-- –í'—é—à–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
-- ============================================================================

-- –¢–æ–ø –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏
CREATE VIEW IF NOT EXISTS top_users AS
SELECT 
    u.telegram_user_id,
    u.first_name,
    u.total_orders,
    u.total_spent,
    u.level,
    COUNT(ub.id) as badges_count
FROM users u
LEFT JOIN user_badges ub ON u.telegram_user_id = ub.user_id
GROUP BY u.telegram_user_id
ORDER BY u.total_orders DESC
LIMIT 100;


-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å –ø–æ –¥–Ω—è—Ö
CREATE VIEW IF NOT EXISTS orders_daily_stats AS
SELECT 
    DATE(created_at) as order_date,
    COUNT(*) as total_orders,
    SUM(final_amount) as total_revenue,
    AVG(final_amount) as avg_order_value,
    COUNT(CASE WHEN status = 'delivered' THEN 1 END) as delivered_count,
    COUNT(CASE WHEN status = 'cancelled' THEN 1 END) as cancelled_count
FROM orders
GROUP BY DATE(created_at)
ORDER BY order_date DESC;


-- –ü–æ–ø—É–ª—è—Ä–Ω—ñ —Ç–æ–≤–∞—Ä–∏
CREATE VIEW IF NOT EXISTS popular_items AS
SELECT 
    item_name,
    category,
    COUNT(*) as order_count,
    SUM(quantity) as total_quantity,
    AVG(price) as avg_price
FROM (
    SELECT 
        json_extract(value, '$.name') as item_name,
        json_extract(value, '$.category') as category,
        json_extract(value, '$.quantity') as quantity,
        json_extract(value, '$.price') as price
    FROM orders, json_each(orders.items_json)
    WHERE status = 'delivered'
)
GROUP BY item_name
ORDER BY order_count DESC
LIMIT 50;
