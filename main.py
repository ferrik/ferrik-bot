import os
import logging
from flask import Flask, request
import requests

# üîπ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–≤
logging.basicConfig(level=logging.INFO)

# üîπ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∑ Render (—á–µ—Ä–µ–∑ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞!)
TOKEN = os.getenv("TELEGRAM_TOKEN")
BASE_URL = f"https://api.telegram.org/bot{TOKEN}"

# üîπ Flask —Å–µ—Ä–≤–µ—Ä
app = Flask(__name__)

# üìå –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é (–∑ –µ–º–æ–¥–∑—ñ)
MAIN_MENU = {
    "order_food": "üçî –ó–∞–º–æ–≤–∏—Ç–∏ —ó–∂—É",
    "reserve_table": "üìÖ –ó–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ —Å—Ç–æ–ª–∏–∫",
    "offers": "üí∏ –ê–∫—Ü—ñ—ó —Ç–∞ –∑–Ω–∏–∂–∫–∏",
    "my_profile": "üôã‚Äç‚ôÇÔ∏è –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å"
}


def send_message(chat_id, text, reply_markup=None):
    """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram"""
    url = f"{BASE_URL}/sendMessage"
    payload = {"chat_id": chat_id, "text": text, "parse_mode": "HTML"}
    if reply_markup:
        payload["reply_markup"] = reply_markup
    requests.post(url, json=payload)


def main_menu_keyboard():
    """–§–æ—Ä–º—É—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = [[{"text": v}] for v in MAIN_MENU.values()]
    return {"keyboard": keyboard, "resize_keyboard": True}


@app.route(f"/webhook/{os.getenv('WEBHOOK_SECRET')}", methods=["POST"])
def webhook():
    """–û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ Telegram"""
    data = request.get_json()
    logging.info(data)

    if "message" in data:
        chat_id = data["message"]["chat"]["id"]
        text = data["message"].get("text", "")

        if text == "/start":
            send_message(
                chat_id,
                "üëã –í—ñ—Ç–∞—é! –Ø <b>FerrikBot</b> ‚Äì —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ –∑ –¥–æ—Å—Ç–∞–≤–∫–∏ —ó–∂—ñ —Ç–∞ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è üçïüç∑",
                reply_markup=main_menu_keyboard()
            )
        elif text == MAIN_MENU["order_food"]:
            send_message(chat_id, "üçΩ –©–æ —Ö–æ—á–µ—à –∑–∞–º–æ–≤–∏—Ç–∏? –ù–∞–ø–∏—à–∏ —Å—Ç—Ä–∞–≤—É, —è –∑–Ω–∞–π–¥—É –¥–ª—è —Ç–µ–±–µ üßë‚Äçüç≥")
        elif text == MAIN_MENU["reserve_table"]:
            send_message(chat_id, "üìÖ –í–∫–∞–∂–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω —Ç–∞ —á–∞—Å, —è –¥–æ–ø–æ–º–æ–∂—É –∑–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ —Å—Ç–æ–ª–∏–∫ ü™ë")
        elif text == MAIN_MENU["offers"]:
            send_message(chat_id, "üí∏ –û—Å—å –∞–∫—Ç—É–∞–ª—å–Ω—ñ –∑–Ω–∏–∂–∫–∏ —Ç–∞ –∞–∫—Ü—ñ—ó –≤—ñ–¥ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤ üéâ")
        elif text == MAIN_MENU["my_profile"]:
            send_message(chat_id, "üôã‚Äç‚ôÇÔ∏è –¢—É—Ç –±—É–¥–µ —Ç–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å: —ñ–º‚Äô—è, –∞–¥—Ä–µ—Å–∞, –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üè†üìû")
        else:
            send_message(chat_id, "ü§ñ –ù–µ —Ä–æ–∑—É–º—ñ—é –∫–æ–º–∞–Ω–¥—É. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π –º–µ–Ω—é ‚¨áÔ∏è", reply_markup=main_menu_keyboard())

    return {"ok": True}


if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
