import logging
from datetime import datetime
from services.admin_panel import admin_panel, get_new_orders, send_daily_stats
from services.telegram import tg_send_message, tg_answer_callback
from services.sheets import get_menu_stats

logger = logging.getLogger("ferrik.operator")

def handle_operator_command(chat_id, text, operator_chat_id):
    """–û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"""
    try:
        if chat_id != int(operator_chat_id):
            return False
            
        if text == "/admin":
            show_admin_menu(chat_id)
            return True
        elif text == "/stats":
            show_daily_stats(chat_id)
            return True
        elif text == "/orders":
            show_pending_orders(chat_id)
            return True
        elif text == "/menu":
            show_menu_stats(chat_id)
            return True
        elif text == "/help_admin":
            show_admin_help(chat_id)
            return True
            
        return False
        
    except Exception as e:
        logger.error(f"Error handling operator command: {e}")
        return False

def show_admin_menu(chat_id):
    """–ü–æ–∫–∞–∑—É—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    try:
        menu_text = "üîß <b>–ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ FerrikFootBot</b>\n\n"
        menu_text += "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"
        
        keyboard = {
            "inline_keyboard": [
                [{"text": "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–Ω—è", "callback_data": "admin_daily_stats"}],
                [{"text": "üì¶ –ù–æ–≤—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", "callback_data": "admin_pending_orders"}],
                [{"text": "üçΩÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ–Ω—é", "callback_data": "admin_menu_stats"}],
                [{"text": "üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ", "callback_data": "admin_users"}],
                [{"text": "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è", "callback_data": "admin_settings"}],
                [{"text": "üìà –ì—Ä–∞—Ñ—ñ–∫–∏", "callback_data": "admin_charts"}]
            ]
        }
        
        tg_send_message(chat_id, menu_text, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error showing admin menu: {e}")
        tg_send_message(chat_id, "–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º–µ–Ω—é –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

def show_daily_stats(chat_id):
    """–ü–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –¥–µ–Ω—å"""
    try:
        stats = admin_panel.get_daily_stats()
        
        if not stats:
            tg_send_message(chat_id, "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.")
            return
            
        stats_text = f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {datetime.now().strftime('%d.%m.%Y')}</b>\n\n"
        stats_text += f"üì¶ <b>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è:</b>\n"
        stats_text += f"  ‚Ä¢ –í—Å—å–æ–≥–æ: {stats['total_orders']}\n"
        stats_text += f"  ‚Ä¢ –ù–æ–≤—ñ: {stats['new_orders']}\n"
        stats_text += f"  ‚Ä¢ –í —Ä–æ–±–æ—Ç—ñ: {stats['in_progress']}\n"
        stats_text += f"  ‚Ä¢ –í–∏–∫–æ–Ω–∞–Ω—ñ: {stats['completed']}\n"
        stats_text += f"  ‚Ä¢ –°–∫–∞—Å–æ–≤–∞–Ω—ñ: {stats['cancelled']}\n\n"
        
        stats_text += f"üí∞ <b>–§—ñ–Ω–∞–Ω—Å–∏:</b>\n"
        stats_text += f"  ‚Ä¢ –í–∏—Ä—É—á–∫–∞: {stats['total_revenue']:.2f} –≥—Ä–Ω\n"
        stats_text += f"  ‚Ä¢ –°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫: {stats['average_order']:.2f} –≥—Ä–Ω\n\n"
        
        # –û–±—á–∏—Å–ª—é—î–º–æ –∫–æ–Ω–≤–µ—Ä—Å—ñ—é
        if stats['total_orders'] > 0:
            conversion = (stats['completed'] / stats['total_orders']) * 100
            stats_text += f"üìà <b>–ö–æ–Ω–≤–µ—Ä—Å—ñ—è:</b> {conversion:.1f}%\n\n"
        
        if stats['new_orders'] > 0:
            stats_text += f"‚ö†Ô∏è <b>–£–≤–∞–≥–∞!</b> {stats['new_orders']} –Ω–æ–≤–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –æ–±—Ä–æ–±–∫–∏."
        
        keyboard = {
            "inline_keyboard": [
                [{"text": "üì¶ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –Ω–æ–≤—ñ", "callback_data": "admin_pending_orders"}],
                [{"text": "üîÑ –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", "callback_data": "admin_daily_stats"}],
                [{"text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", "callback_data": "admin_menu"}]
            ]
        }
        
        tg_send_message(chat_id, stats_text, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error showing daily stats: {e}")
        tg_send_message(chat_id, "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")

def show_pending_orders(chat_id):
    """–ü–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å"""
    try:
        orders = get_new_orders()
        
        if not orders:
            message = "‚úÖ –ù–µ–º–∞—î –Ω–æ–≤–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å!\n\n–í—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ–ø—Ä–∞—Ü—å–æ–≤–∞–Ω—ñ."
            keyboard = {
                "inline_keyboard": [
                    [{"text": "üîÑ –û–Ω–æ–≤–∏—Ç–∏", "callback_data": "admin_pending_orders"}],
                    [{"text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "callback_data": "admin_menu"}]
                ]
            }
            tg_send_message(chat_id, message, reply_markup=keyboard)
            return
            
        header = f"üì¶ <b>–ù–æ–≤—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ({len(orders)})</b>\n\n"
        tg_send_message(chat_id, header)
        
        for order in orders[:10]:  # –ü–æ–∫–∞–∑—É—î–º–æ –º–∞–∫—Å–∏–º—É–º 10
            order_text = f"üÜî <b>#{order.get('ID –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è', 'N/A')}</b>\n"
            order_text += f"üë§ –ö–ª—ñ—î–Ω—Ç: {order.get('Telegram User ID', 'N/A')}\n"
            order_text += f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {order.get('–¢–µ–ª–µ—Ñ–æ–Ω', 'N/A')}\n"
            order_text += f"üè† –ê–¥—Ä–µ—Å–∞: {order.get('–ê–¥—Ä–µ—Å–∞', 'N/A')}\n"
            order_text += f"üí∞ –°—É–º–∞: {order.get('–°—É–º–∞', 0)} –≥—Ä–Ω\n"
            order_text += f"üí≥ –û–ø–ª–∞—Ç–∞: {order.get('–°–ø–æ—Å—ñ–± –û–ø–ª–∞—Ç–∏', 'N/A')}\n"
            order_text += f"üïê –ß–∞—Å: {order.get('–î–∞—Ç–∞/—á–∞—Å', 'N/A')}\n"
            
            # –†–æ–∑—à–∏—Ñ—Ä–æ–≤—É—î–º–æ —Ç–æ–≤–∞—Ä–∏ —è–∫—â–æ —î JSON
            try:
                import json
                items = json.loads(order.get('–¢–æ–≤–∞—Ä–∏ (JSON)', '[]'))
                if items:
                    order_text += f"\nüõí <b>–¢–æ–≤–∞—Ä–∏:</b>\n"
                    for item in items:
                        order_text += f"  ‚Ä¢ {item.get('name', 'N/A')} √ó {item.get('qty', 1)}\n"
            except:
                order_text += f"\nüõí –¢–æ–≤–∞—Ä–∏: {order.get('–¢–æ–≤–∞—Ä–∏ (JSON)', 'N/A')}\n"
            
            keyboard = {
                "inline_keyboard": [
                    [
                        {"text": "‚úÖ –í —Ä–æ–±–æ—Ç—É", "callback_data": f"order_status_{order.get('ID –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è')}_–í —Ä–æ–±–æ—Ç—ñ"},
                        {"text": "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", "callback_data": f"order_status_{order.get('ID –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è')}_–°–∫–∞—Å–æ–≤–∞–Ω–æ"}
                    ],
                    [
                        {"text": "üìû –ó–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏", "url": f"tel:{order.get('–¢–µ–ª–µ—Ñ–æ–Ω', '')}"}
                    ]
                ]
            }
            
            tg_send_message(chat_id, order_text, reply_markup=keyboard)
            
        if len(orders) > 10:
            footer = f"\n... —ñ —â–µ {len(orders) - 10} –∑–∞–º–æ–≤–ª–µ–Ω—å.\n–í—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω—ñ –≤ Google Sheets."
            tg_send_message(chat_id, footer)
            
    except Exception as e:
        logger.error(f"Error showing pending orders: {e}")
        tg_send_message(chat_id, "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å.")

def show_menu_stats(chat_id):
    """–ü–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–µ–Ω—é"""
    try:
        stats = get_menu_stats()
        
        stats_text = f"üçΩÔ∏è <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ–Ω—é</b>\n\n"
        stats_text += f"üìä –í—Å—å–æ–≥–æ –ø–æ–∑–∏—Ü—ñ–π: {stats.get('total_items', 0)}\n"
        stats_text += f"‚úÖ –ê–∫—Ç–∏–≤–Ω–∏—Ö: {stats.get('active_items', 0)}\n\n"
        
        stats_text += f"üìÇ <b>–ü–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö:</b>\n"
        for category, data in stats.get('categories', {}).items():
            stats_text += f"  ‚Ä¢ {category}: {data['active']}/{data['total']}\n"
        
        if stats.get('cache_age'):
            cache_minutes = int(stats['cache_age'] / 60)
            stats_text += f"\nüïê –ö–µ—à –æ–Ω–æ–≤–ª–µ–Ω–æ: {cache_minutes} —Ö–≤ —Ç–æ–º—É"
        
        keyboard = {
            "inline_keyboard": [
                [{"text": "üîÑ –û–Ω–æ–≤–∏—Ç–∏ –∫–µ—à –º–µ–Ω—é", "callback_data": "admin_refresh_menu"}],
                [{"text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "callback_data": "admin_menu"}]
            ]
        }
        
        tg_send_message(chat_id, stats_text, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error showing menu stats: {e}")
        tg_send_message(chat_id, "–ü–æ–º–∏–ª–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–µ–Ω—é.")

def show_admin_help(chat_id):
    """–ü–æ–∫–∞–∑—É—î –¥–æ–≤—ñ–¥–∫—É –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    help_text = """üîß <b>–î–æ–≤—ñ–¥–∫–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>

<b>–ö–æ–º–∞–Ω–¥–∏:</b>
/admin - –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–Ω—è
/orders - –ù–æ–≤—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
/menu - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ–Ω—é
/help_admin - –¶—è –¥–æ–≤—ñ–¥–∫–∞

<b>Google Sheets –ø–∞–Ω–µ–ª—å:</b>
‚Ä¢ –í–∫–ª–∞–¥–∫–∞ "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è" - –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
‚Ä¢ –í–∫–ª–∞–¥–∫–∞ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" - –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∏
‚Ä¢ –í–∫–ª–∞–¥–∫–∞ "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ" - –±–∞–∑–∞ –∫–ª—ñ—î–Ω—Ç—ñ–≤

<b>–°—Ç–∞—Ç—É—Å–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å:</b>
‚Ä¢ –ù–æ–≤–µ - —â–æ–π–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–µ
‚Ä¢ –í —Ä–æ–±–æ—Ç—ñ - –ø—Ä–∏–π–Ω—è—Ç–µ –≤ –æ–±—Ä–æ–±–∫—É
‚Ä¢ –ì–æ—Ç–æ–≤–µ - –≥–æ—Ç–æ–≤–µ –¥–æ –≤–∏–¥–∞—á—ñ
‚Ä¢ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ - —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–Ω–æ
‚Ä¢ –°–∫–∞—Å–æ–≤–∞–Ω–æ - –≤—ñ–¥–º—ñ–Ω–µ–Ω–æ

<b>–®–≤–∏–¥–∫—ñ –¥—ñ—ó:</b>
‚Ä¢ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É
‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üìû" –¥–ª—è –¥–∑–≤—ñ–Ω–∫–∞
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ"""
    
    tg_send_message(chat_id, help_text)

def handle_order_status_change(chat_id, callback_data, callback_id, operator_chat_id):
    """–û–±—Ä–æ–±–ª—è—î –∑–º—ñ–Ω—É —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"""
    try:
        if chat_id != int(operator_chat_id):
            return False
            
        # –ü–∞—Ä—Å–∏–º–æ callback_data: order_status_{order_id}_{new_status}
        parts = callback_data.split('_')
        if len(parts) < 4:
            return False
            
        order_id = parts[2]
        new_status = '_'.join(parts[3:])  # –ù–∞ –≤–∏–ø–∞–¥–æ–∫ –ø—Ä–æ–±—ñ–ª—ñ–≤ –≤ —Å—Ç–∞—Ç—É—Å—ñ
        
        # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –≤ Google Sheets
        success = admin_panel.update_order_status(order_id, new_status, "–û–ø–µ—Ä–∞—Ç–æ—Ä")
        
        if success:
            tg_answer_callback(callback_id, f"–°—Ç–∞—Ç—É—Å –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞: {new_status}")
            
            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
            confirmation = f"‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #{order_id} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –≤ —Å—Ç–∞—Ç—É—Å: <b>{new_status}</b>"
            tg_send_message(chat_id, confirmation)
            
            # –Ø–∫—â–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≥–æ—Ç–æ–≤–µ - –º–æ–∂–Ω–∞ –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞
            if new_status == "–ì–æ—Ç–æ–≤–µ":
                suggest_notify_customer(chat_id, order_id)
                
        else:
            tg_answer_callback(callback_id, "–ü–æ–º–∏–ª–∫–∞ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É")
            
        return True
        
    except Exception as e:
        logger.error(f"Error handling order status change: {e}")
        tg_answer_callback(callback_id, "–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏")
        return False

def suggest_notify_customer(chat_id, order_id):
    """–ü—Ä–æ–ø–æ–Ω—É—î –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞ –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"""
    try:
        message = f"üìû –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞ –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #{order_id}?"
        
        keyboard = {
            "inline_keyboard": [
                [{"text": "‚úÖ –ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞", "callback_data": f"notify_customer_{order_id}"}],
                [{"text": "‚ùå –ù–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ", "callback_data": "dismiss_notification"}]
            ]
        }
        
        tg_send_message(chat_id, message, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error suggesting customer notification: {e}")

def handle_admin_callback(chat_id, callback_data, callback_id, operator_chat_id):
    """–û–±—Ä–æ–±–ª—è—î –≤—Å—ñ callback-–∏ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ"""
    try:
        if chat_id != int(operator_chat_id):
            return False
            
        if callback_data == "admin_menu":
            show_admin_menu(chat_id)
            tg_answer_callback(callback_id)
            
        elif callback_data == "admin_daily_stats":
            show_daily_stats(chat_id)
            tg_answer_callback(callback_id)
            
        elif callback_data == "admin_pending_orders":
            show_pending_orders(chat_id)
            tg_answer_callback(callback_id)
            
        elif callback_data == "admin_menu_stats":
            show_menu_stats(chat_id)
            tg_answer_callback(callback_id)
            
        elif callback_data == "admin_refresh_menu":
            from services.sheets import get_menu_from_sheet
            get_menu_from_sheet(force=True)
            tg_answer_callback(callback_id, "–ö–µ—à –º–µ–Ω—é –æ–Ω–æ–≤–ª–µ–Ω–æ!")
            show_menu_stats(chat_id)
            
        elif callback_data.startswith("order_status_"):
            handle_order_status_change(chat_id, callback_data, callback_id, operator_chat_id)
            
        elif callback_data.startswith("notify_customer_"):
            order_id = callback_data.replace("notify_customer_", "")
            notify_customer_ready(order_id)
            tg_answer_callback(callback_id, "–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            
        elif callback_data == "dismiss_notification":
            tg_answer_callback(callback_id, "–°–∫–∞—Å–æ–≤–∞–Ω–æ")
            
        elif callback_data == "admin_users":
            show_users_stats(chat_id)
            tg_answer_callback(callback_id)
            
        elif callback_data == "admin_settings":
            show_admin_settings(chat_id)
            tg_answer_callback(callback_id)
            
        elif callback_data == "admin_charts":
            show_charts_info(chat_id)
            tg_answer_callback(callback_id)
            
        else:
            return False
            
        return True
        
    except Exception as e:
        logger.error(f"Error handling admin callback: {e}")
        return False

def notify_customer_ready(order_id):
    """–ü–æ–≤—ñ–¥–æ–º–ª—è—î –∫–ª—ñ—î–Ω—Ç–∞ –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"""
    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ Google Sheets
        if not admin_panel.spreadsheet:
            admin_panel.init_connection()
            
        ws = admin_panel.spreadsheet.worksheet("–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è")
        orders = ws.get_all_records()
        
        for order in orders:
            if order.get("ID –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è") == order_id:
                customer_id = order.get("Telegram User ID")
                if customer_id:
                    message = f"üéâ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #{order_id} –≥–æ—Ç–æ–≤–µ!\n\n"
                    message += "–ú–æ–∂–µ—Ç–µ –∑–∞–±–∏—Ä–∞—Ç–∏ –∞–±–æ –æ—á—ñ–∫—É–≤–∞—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏.\n"
                    message += "–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!"
                    
                    tg_send_message(int(customer_id), message)
                    return True
                    
        return False
        
    except Exception as e:
        logger.error(f"Error notifying customer: {e}")
        return False

def show_users_stats(chat_id):
    """–ü–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""
    try:
        if not admin_panel.spreadsheet:
            admin_panel.init_connection()
            
        ws = admin_panel.spreadsheet.worksheet("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ")
        users = ws.get_all_records()
        
        total_users = len(users)
        if total_users == 0:
            tg_send_message(chat_id, "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.")
            return
            
        # –†–∞—Ö—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        active_users = len([u for u in users if u.get("–°—Ç–∞—Ç—É—Å") == "–∞–∫—Ç–∏–≤–Ω–∏–π"])
        total_orders = sum(int(u.get("–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å", 0)) for u in users)
        avg_orders_per_user = total_orders / total_users if total_users > 0 else 0
        
        # –¢–û–ü-5 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∑–∞–º–æ–≤–ª–µ–Ω—å
        top_users = sorted(users, key=lambda x: int(x.get("–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å", 0)), reverse=True)[:5]
        
        stats_text = f"üë• <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤</b>\n\n"
        stats_text += f"üìä –í—Å—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {total_users}\n"
        stats_text += f"‚úÖ –ê–∫—Ç–∏–≤–Ω–∏—Ö: {active_users}\n"
        stats_text += f"üì¶ –í—Å—å–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω—å: {total_orders}\n"
        stats_text += f"üìà –°–µ—Ä–µ–¥–Ω—è –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å: {avg_orders_per_user:.1f}\n\n"
        
        if top_users:
            stats_text += f"üèÜ <b>–¢–û–ü-5 –∫–ª—ñ—î–Ω—Ç—ñ–≤:</b>\n"
            for i, user in enumerate(top_users, 1):
                name = user.get("–Ü–º'—è", "N/A")
                orders_count = user.get("–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å", 0)
                avg_check = user.get("–°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫", 0)
                stats_text += f"{i}. {name} - {orders_count} –∑–∞–º., {avg_check:.0f} –≥—Ä–Ω\n"
        
        keyboard = {
            "inline_keyboard": [
                [{"text": "üîÑ –û–Ω–æ–≤–∏—Ç–∏", "callback_data": "admin_users"}],
                [{"text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "callback_data": "admin_menu"}]
            ]
        }
        
        tg_send_message(chat_id, stats_text, reply_markup=keyboard)
        
    except Exception as e:
        logger.error(f"Error showing users stats: {e}")
        tg_send_message(chat_id, "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.")

def show_admin_settings(chat_id):
    """–ü–æ–∫–∞–∑—É—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    settings_text = """‚öôÔ∏è <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏</b>

<b>–ü–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:</b>
‚Ä¢ –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: 200 –≥—Ä–Ω
‚Ä¢ –ß–∞—Å —Ä–æ–±–æ—Ç–∏: 9:00 - 22:00
‚Ä¢ –ó–æ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: 7 –∫–º –≤—ñ–¥ —Ü–µ–Ω—Ç—Ä—É
‚Ä¢ –í–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: 50 –≥—Ä–Ω

<b>–°—Ç–∞—Ç—É—Å–∏ –±–æ—Ç–∞:</b>
‚Ä¢ Google Sheets: ‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ
‚Ä¢ Gemini AI: ‚úÖ –ü—Ä–∞—Ü—é—î
‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö: ‚úÖ –ü—Ä–∞—Ü—é—î

<b>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è:</b>
‚Ä¢ –©–æ–¥–µ–Ω–Ω—ñ –∑–≤—ñ—Ç–∏: ‚úÖ –£–≤—ñ–º–∫–Ω–µ–Ω–æ
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: ‚úÖ –£–≤—ñ–º–∫–Ω–µ–Ω–æ"""
    
    keyboard = {
        "inline_keyboard": [
            [{"text": "üìß –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è", "callback_data": "admin_notifications"}],
            [{"text": "üïê –ó–º—ñ–Ω–∏—Ç–∏ —Ä–µ–∂–∏–º —Ä–æ–±–æ—Ç–∏", "callback_data": "admin_schedule"}],
            [{"text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "callback_data": "admin_menu"}]
        ]
    }
    
    tg_send_message(chat_id, settings_text, reply_markup=keyboard)

def show_charts_info(chat_id):
    """–ü–æ–∫–∞–∑—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≥—Ä–∞—Ñ—ñ–∫–∏ —Ç–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫—É"""
    charts_text = """üìà <b>–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ —Ç–∞ –≥—Ä–∞—Ñ—ñ–∫–∏</b>

<b>–î–æ—Å—Ç—É–ø–Ω–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞:</b>
‚Ä¢ Google Sheets –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º–∏ —Ñ–æ—Ä–º—É–ª–∞–º–∏
‚Ä¢ –©–æ–¥–µ–Ω–Ω–∞/—Ç–∏–∂–Ω–µ–≤–∞/–º—ñ—Å—è—á–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ –ê–Ω–∞–ª—ñ–∑ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—ñ —Å—Ç—Ä–∞–≤
‚Ä¢ –ì–µ–æ–≥—Ä–∞—Ñ—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω—å

<b>–Ø–∫ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏:</b>
1. –ü–µ—Ä–µ–π–¥—ñ—Ç—å —É Google Sheets –ø–∞–Ω–µ–ª—å
2. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –≤–∫–ª–∞–¥–∫—É "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
3. –í—Å—ñ –¥–∞–Ω—ñ –æ–Ω–æ–≤–ª—é—é—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ

<b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:</b>
‚Ä¢ –°—Ç–≤–æ—Ä—ñ—Ç—å Google Data Studio –¥–ª—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó
‚Ä¢ –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –∑–≤—ñ—Ç–∏
‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ñ—ñ–ª—å—Ç—Ä–∏ –∑–∞ –ø–µ—Ä—ñ–æ–¥–∞–º–∏"""
    
    keyboard = {
        "inline_keyboard": [
            [{"text": "üìä –í—ñ–¥–∫—Ä–∏—Ç–∏ Google Sheets", "url": f"https://docs.google.com/spreadsheets/d/{admin_panel.spreadsheet.id if admin_panel.spreadsheet else 'YOUR_SHEET_ID'}"}],
            [{"text": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "callback_data": "admin_menu"}]
        ]
    }
    
    tg_send_message(chat_id, charts_text, reply_markup=keyboard)

def schedule_daily_reports(operator_chat_id, hour=9):
    """–ü–ª–∞–Ω—É—î —â–æ–¥–µ–Ω–Ω—ñ –∑–≤—ñ—Ç–∏ (–ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ cron –∞–±–æ scheduler)"""
    # –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ—Ç—Ä–µ–±—É—î –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫–∞ –∑–∞–≤–¥–∞–Ω—å
    # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —á–µ—Ä–µ–∑ APScheduler –∞–±–æ cron job
    pass
