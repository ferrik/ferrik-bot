"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Ä–æ–∑–º–æ–≤ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –ø—Ä–æ–º–ø—Ç–∏ –∑ prompts.py —Ç–∞ AI –¥–ª—è —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ—ó –≤–∑–∞—î–º–æ–¥—ñ—ó
"""

import logging
from datetime import datetime
from prompts import (
    get_greeting, get_system_prompt, get_text, get_menu_buttons,
    detect_language, build_recommendation_prompt, TIME_OF_DAY_SUGGESTIONS
)
from services.gemini import get_ai_response
from services.sheets import get_menu_from_sheet, search_menu_items
from models.user import get_state, set_state, get_cart

logger = logging.getLogger('ferrik')


def get_time_of_day():
    """–í–∏–∑–Ω–∞—á–∞—î —á–∞—Å—Ç–∏–Ω—É –¥–æ–±–∏"""
    hour = datetime.now().hour
    if 6 <= hour < 11:
        return 'morning'
    elif 11 <= hour < 16:
        return 'lunch'
    elif 16 <= hour < 21:
        return 'evening'
    else:
        return 'night'


def get_user_language(user_id):
    """–û—Ç—Ä–∏–º—É—î –º–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤ —Å—Ç–∞–Ω—ñ)"""
    state, data = get_state(user_id)
    if data and 'language' in data:
        return data['language']
    return 'ua'  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞


def set_user_language(user_id, lang):
    """–í—Å—Ç–∞–Ω–æ–≤–ª—é—î –º–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    state, data = get_state(user_id)
    if not data:
        data = {}
    data['language'] = lang
    set_state(user_id, state, data)


def handle_start_command(chat_id, user):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –º–æ–≤"""
    from services.telegram import send_message
    
    try:
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ –º–æ–≤—É –∑ —ñ–º–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        lang = get_user_language(chat_id)
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
        greeting = get_greeting(lang)
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —á–∞—Å –¥–æ–±–∏ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó
        time_of_day = get_time_of_day()
        time_greeting = TIME_OF_DAY_SUGGESTIONS.get(lang, {}).get(time_of_day, {}).get('greeting', '')
        
        if time_greeting:
            greeting = f"{time_greeting}\n\n{greeting}"
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        buttons = get_menu_buttons(lang)
        keyboard = {
            "keyboard": [
                [{"text": buttons['menu']}, {"text": buttons['recommendation']}],
                [{"text": buttons['cart']}, {"text": buttons['order_status']}],
                [{"text": buttons['help']}]
            ],
            "resize_keyboard": True
        }
        
        send_message(chat_id, greeting, keyboard)
        set_state(chat_id, 'normal')
        
        logger.info(f"Start command handled for {chat_id} in {lang}")
        
    except Exception as e:
        logger.error(f"Error in handle_start_command: {e}", exc_info=True)


def handle_menu_command(chat_id, user):
    """–ü–æ–∫–∞–∑—É—î –º–µ–Ω—é –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏"""
    from services.telegram import send_message
    
    try:
        lang = get_user_language(chat_id)
        menu = get_menu_from_sheet()
        
        if not menu:
            send_message(chat_id, get_text('menu_empty', lang))
            return
        
        # –ì—Ä—É–ø—É—î–º–æ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏
        categories = {}
        for item in menu:
            cat = item.get('–ö–∞—Ç–µ–≥–æ—Ä—ñ—è', '–Ü–Ω—à–µ')
            if cat not in categories:
                categories[cat] = []
            categories[cat].append(item)
        
        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        menu_text = "üçΩ <b>–ú–µ–Ω—é:</b>\n\n" if lang == 'ua' else "üçΩ <b>Menu:</b>\n\n"
        
        for category, items in sorted(categories.items()):
            menu_text += f"<b>{category}</b>\n"
            for item in items[:10]:  # –ú–∞–∫—Å 10 –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
                name = item.get('–°—Ç—Ä–∞–≤–∏', 'N/A')
                price = item.get('–¶—ñ–Ω–∞', 0)
                menu_text += f"‚Ä¢ {name} - {price} –≥—Ä–Ω\n"
            menu_text += "\n"
        
        # –î–æ–¥–∞—î–º–æ –ø—ñ–¥–∫–∞–∑–∫—É
        hint = "–ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É —Å—Ç—Ä–∞–≤–∏ —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ" if lang == 'ua' else "Type dish name to learn more"
        menu_text += f"\nüí° {hint}"
        
        send_message(chat_id, menu_text)
        
    except Exception as e:
        logger.error(f"Error in handle_menu_command: {e}", exc_info=True)
        send_message(chat_id, get_text('error', get_user_language(chat_id)))


def handle_recommendation_request(chat_id, user, query=None):
    """–û–±—Ä–æ–±–ª—è—î –∑–∞–ø–∏—Ç –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—é"""
    from services.telegram import send_message
    
    try:
        lang = get_user_language(chat_id)
        
        # –Ø–∫—â–æ –Ω–µ–º–∞—î –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É - –∑–∞–ø–∏—Ç—É—î–º–æ
        if not query:
            question = get_text('cuisine_type', lang) if lang == 'ua' else USER_QUESTIONS['en']['cuisine_type']
            send_message(chat_id, question)
            set_state(chat_id, 'awaiting_recommendation_details')
            return
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –º–µ–Ω—é
        menu = get_menu_from_sheet()
        if not menu:
            send_message(chat_id, get_text('menu_empty', lang))
            return
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–±—Ä–æ–±–∫–∏
        send_message(chat_id, get_text('processing', lang))
        
        # –ë—É–¥—É—î–º–æ –ø—Ä–æ–º–ø—Ç –¥–ª—è AI
        user_preferences = {
            'query': query,
            'people': 1,  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
            'time_of_day': get_time_of_day()
        }
        
        prompt = build_recommendation_prompt(user_preferences, menu, lang)
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—é –≤—ñ–¥ AI
        recommendation = get_ai_response(prompt, {
            'first_name': user.get('first_name', ''),
            'username': user.get('username', '')
        })
        
        send_message(chat_id, recommendation)
        set_state(chat_id, 'normal')
        
    except Exception as e:
        logger.error(f"Error in handle_recommendation_request: {e}", exc_info=True)
        send_message(chat_id, get_text('error', get_user_language(chat_id)))


def handle_cart_command(chat_id, user):
    """–ü–æ–∫–∞–∑—É—î –∫–æ—à–∏–∫"""
    from handlers.cart import show_cart
    
    try:
        show_cart(chat_id)
    except Exception as e:
        logger.error(f"Error in handle_cart_command: {e}", exc_info=True)


def handle_search_query(chat_id, text, user):
    """–û–±—Ä–æ–±–ª—è—î –ø–æ—à—É–∫ —Å—Ç—Ä–∞–≤"""
    from services.telegram import send_message
    
    try:
        lang = get_user_language(chat_id)
        
        # –®—É–∫–∞—î–º–æ –≤ –º–µ–Ω—é
        results = search_menu_items(text)
        
        if not results:
            # –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ AI
            handle_ai_conversation(chat_id, text, user)
            return
        
        # –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        response = "üîç <b>–ó–Ω–∞–π–¥–µ–Ω–æ:</b>\n\n" if lang == 'ua' else "üîç <b>Found:</b>\n\n"
        
        for item in results[:5]:
            name = item.get('–°—Ç—Ä–∞–≤–∏', 'N/A')
            desc = item.get('–û–ø–∏—Å', '')
            price = item.get('–¶—ñ–Ω–∞', 0)
            
            response += f"<b>{name}</b>\n"
            if desc:
                response += f"üìù {desc}\n"
            response += f"üí∞ {price} –≥—Ä–Ω\n\n"
        
        # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∫–æ—à–∏–∫
        keyboard = {
            "inline_keyboard": [
                [{"text": f"‚ûï {results[i].get('–°—Ç—Ä–∞–≤–∏')}", 
                  "callback_data": f"add_{results[i].get('ID')}"} ]
                for i in range(min(3, len(results)))
            ]
        }
        
        send_message(chat_id, response, keyboard)
        
    except Exception as e:
        logger.error(f"Error in handle_search_query: {e}", exc_info=True)


def handle_ai_conversation(chat_id, text, user):
    """–û–±—Ä–æ–±–ª—è—î –≤—ñ–ª—å–Ω—É —Ä–æ–∑–º–æ–≤—É —á–µ—Ä–µ–∑ AI"""
    from services.telegram import send_message
    
    try:
        lang = get_user_language(chat_id)
        
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ –º–æ–≤—É –∑ —Ç–µ–∫—Å—Ç—É
        detected_lang = detect_language(text)
        if detected_lang != lang:
            set_user_language(chat_id, detected_lang)
            lang = detected_lang
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Å–∏—Å—Ç–µ–º–Ω–∏–π –ø—Ä–æ–º–ø—Ç
        system_prompt = get_system_prompt(lang)
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –º–µ–Ω—é –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        menu = get_menu_from_sheet()
        menu_context = ""
        if menu:
            menu_context = "\n\n–î–û–°–¢–£–ü–ù–ï –ú–ï–ù–Æ:\n" + "\n".join([
                f"- {item.get('–°—Ç—Ä–∞–≤–∏')}: {item.get('–¶—ñ–Ω–∞')} –≥—Ä–Ω"
                for item in menu[:20]
            ])
        
        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤–Ω–∏–π –ø—Ä–æ–º–ø—Ç
        full_prompt = f"{system_prompt}{menu_context}\n\n–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {text}\n\n–¢–≤–æ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å:"
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
        user_context = {
            'first_name': user.get('first_name', ''),
            'username': user.get('username', '')
        }
        
        response = get_ai_response(full_prompt, user_context)
        
        send_message(chat_id, response)
        
    except Exception as e:
        logger.error(f"Error in handle_ai_conversation: {e}", exc_info=True)
        send_message(chat_id, get_text('error', get_user_language(chat_id)))


def handle_button_press(chat_id, button_text, user):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫"""
    from services.telegram import send_message
    
    try:
        lang = get_user_language(chat_id)
        buttons = get_menu_buttons(lang)
        
        if button_text == buttons['menu']:
            handle_menu_command(chat_id, user)
        elif button_text == buttons['recommendation']:
            handle_recommendation_request(chat_id, user)
        elif button_text == buttons['cart']:
            handle_cart_command(chat_id, user)
        elif button_text == buttons['order_status']:
            handle_order_status(chat_id, user)
        elif button_text == buttons['help']:
            handle_help_command(chat_id, user)
        else:
            # –ù–µ–≤—ñ–¥–æ–º–∞ –∫–Ω–æ–ø–∫–∞ - –æ–±—Ä–æ–±–ª—è—î–º–æ —è–∫ —Ç–µ–∫—Å—Ç
            handle_search_query(chat_id, button_text, user)
            
    except Exception as e:
        logger.error(f"Error in handle_button_press: {e}", exc_info=True)


def handle_order_status(chat_id, user):
    """–ü–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω—å"""
    from services.telegram import send_message
    
    lang = get_user_language(chat_id)
    # TODO: –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    message = "–£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å" if lang == 'ua' else "You don't have any active orders yet"
    send_message(
